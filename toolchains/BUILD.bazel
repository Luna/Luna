load("@aspect_bazel_lib//lib/private:tar_toolchain.bzl", "tar_toolchain")

## Discover dependencies via
## > bazel build <target> --extra_toolchains=//:plus_one_strict_deps_filter
load("@io_bazel_rules_scala//scala:scala_toolchain.bzl", "scala_toolchain")

scala_toolchain(
    name = "enso_toolchain_impl",
    scalac_jvm_flags = [
        "-Djava.security.manager=allow",
    ],
    scalacopts = ["-Ywarn-unused"],
    ## Allows for easier discovery of missing dependencies
    ## dependency_mode = "plus-one",
    ## dependency_tracking_method = "ast",
    ## strict_deps_mode = "error",
    visibility = ["//visibility:public"],
)

toolchain(
    name = "enso_toolchain",
    toolchain = "enso_toolchain_impl",
    toolchain_type = "@io_bazel_rules_scala//scala:toolchain_type",
    visibility = ["//visibility:public"],
)

# # Temporary hack to avoid using bsdtar on windows, since it doesn't contain any decompression filters:
# # https://github.com/bazel-contrib/bazel-lib/issues/968
# tar_toolchain(
#     name = "windows_builtin_tar_toolchain_impl",
#     binary_path = "C:\\Windows\\system32\\tar.exe",
# )

toolchain(
    name = "windows_builtin_tar_toolchain",
    exec_compatible_with = [
        "@platforms//os:windows",
    ],
    toolchain = "@tar_toolchain//:windows_builtin_tar_toolchain",
    toolchain_type = "@aspect_bazel_lib//lib:tar_toolchain_type",
)
