import sbt.*
import sbt.Keys.*

import java.nio.file.attribute.BasicFileAttributes
import java.nio.file.{FileVisitResult, Files, Path, SimpleFileVisitor}
import scala.collection.mutable.ListBuffer

object Utils {

  /** Recursively lists all `*.scala` files in the `target/src_managed` directory.
    * Should be put as a dependency of `Compile / managedSources` task to ensure
    * that sbt picks up any scala sources generated by the Java annotation processor.
    * @return
    */
  def listAllGeneratedScalaFiles(): Def.Initialize[Task[Seq[File]]] = Def.task {
    val srcManagedDir = (Compile / sourceManaged).value
    val scalaFiles    = ListBuffer[Path]()

    Files.walkFileTree(
      srcManagedDir.toPath,
      new SimpleFileVisitor[Path]() {
        override def visitFile(
          file: Path,
          attrs: BasicFileAttributes
        ): FileVisitResult = {
          if (file.toString.endsWith(".scala")) {
            scalaFiles += file
          }
          FileVisitResult.CONTINUE
        }
      }
    )

    scalaFiles.map(_.toFile)
  }
}
