## Language Server's application.conf

akka {
  actor.debug.lifecycle = on
  http {
      server {
          idle-timeout = infinite
          remote-address-header = on
          websocket.periodic-keep-alive-max-idle = 1 second
      }
  }
  https {
      public-certificate = ${?ENSO_HTTPS_PUBLIC_CERTIFICATE}
      public-certificate-algorithm = "X.509"
      public-certificate-algorithm = ${?ENSO_HTTPS_PUBLIC_CERTIFICATE_ALGORITHM}
      private-key = ${?ENSO_HTTPS_PRIVATE_KEY}
      keystore-type = "PKCS12"
      keystore-type = ${?ENSO_HTTPS_KEYSTORE_TYPE}
      keymanager-algorithm = "SunX509"
      keymanager-algorithm = ${?ENSO_HTTPS_KEYMANAGER_ALGORITHM}
      ssl-type = "TLS"
      ssl-type = ${?ENSO_HTTPS_SSL}
  }
  log-dead-letters = 1
  log-dead-letters-during-shutdown = off
}

logging-service {
  logger {
    akka.actor = info
    akka.event = error
    akka.routing = error
    akka.io = error
    akka.stream = error
    slick.jdbc.JdbcBackend.statement = error # log SQL queries on debug level
    slick."*" = error
    org.eclipse.jgit = error
    io.methvin.watcher = error
    # Log levels to limit during very verbose setting:
    #org.enso.languageserver.protocol.json.JsonConnectionController = debug
    #org.enso.jsonrpc.JsonRpcServer = debug
    #org.enso.languageserver.runtime.RuntimeConnector = debug
  }
  appenders = [
    {
        name = "socket"
        hostname = "localhost"
        hostname = ${?ENSO_LOGSERVER_HOSTNAME}
        port = 6000
        port = ${?ENSO_LOGSERVER_PORT}
    },
    {
        name = "console"
    }
  ]
  default-appender = socket
  default-appender = ${?ENSO_APPENDER_DEFAULT}
  log-to-file {
    enable = false
    enable = ${?ENSO_LOG_TO_FILE}
    log-level = debug
    log-level = ${?ENSO_LOG_TO_FILE_LOG_LEVEL}
  }
}
