{
  "options": {
    "debug": {
      "default": false,
      "description": "Controls the debug mode for the application. In this mode, all logs are printed to the console, and EnsoGL extensions are loaded. Otherwise, logs are hidden unless explicitly shown with `showLogs`."
    }
  },
  "groups": {
    "loader": {
      "description": "Options of the application loader. The Loader downloads application assets, compiles the WASM code, and runs the chosen application entry points.",
      "options": {
        "spinner": {
          "default": true,
          "description": "Controls whether the visual loader should be visible on the screen when downloading and compiling WASM sources.",
          "primary": false
        },
        "wasmUrl": {
          "default": "pkg.wasm",
          "description": "The URL of the WASM pkg file generated by ensogl-pack.",
          "primary": false
        },
        "jsUrl": {
          "default": "pkg.js",
          "description": "The URL of the JS pkg file generated by ensogl-pack.",
          "primary": false
        },
        "shadersUrl": {
          "default": "shaders",
          "description": "The URL of pre-compiled the shaders directory.",
          "primary": false
        },
        "downloadToInitRatio": {
          "default": 1.0,
          "description": "The (time needed for WASM download) / (total time including WASM download and WASM app initialization). In case of small WASM apps this can be set to 1.0. In case of bigger WASM apps, it is desired to show the progress bar growing up to e.g. 70% and leaving the last 30% for WASM app init.",
          "primary": false
        }
      }
    },
    "startup": {
      "description": "Options controlling the behavior of the application at startup. For example, they allow choosing the application entry point to be run.",
      "options": {
        "entry": {
          "default": "ide",
          "description": "The application entry point. Most of the entry points are debug utilities allowing testing the look and feel of graphical interface components. Use `_` to list available entry points."
        },
        "maxBeforeMainTimeMs": {
          "default": 300,
          "description": "The maximum time in milliseconds before main entry points are allowed to run. After this time, an error will be printed, but the execution will continue.",
          "primary": false
        }
      }
    },

    "debug": {
      "description": "Options allowing checking for diagnosing application errors.",
      "options": {
        "enableSpector": {
          "default": false,
          "description": "Enables SpectorJS. This is a temporary flag to test Spector. It will be removed after all Spector integration issues are resolved. See: https://github.com/BabylonJS/Spector.js/issues/252.",
          "primary": false
        }
      }
    }
  }
}
