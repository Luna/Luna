"enso-org/enso"

bazel_dep(name = "aspect_rules_js", version = "1.41.2")

####### Node.js version #########
bazel_dep(name = "rules_nodejs", version = "6.1.0")
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version = "20.11.1")
#################################

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

bazel_dep(name = "aspect_rules_ts", version = "2.2.0")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)

rules_ts_ext.deps()

use_repo(rules_ts_ext, "npm_typescript")

## JVM
bazel_dep(name = "rules_java", version = "7.5.0")
bazel_dep(name = "rules_graalvm", version = "0.11.1") ## upgrade to 0.11.2 once available in bazel central

gvm = use_extension("@rules_graalvm//:extensions.bzl", "graalvm")

gvm.graalvm(
    name = "graalvm",
    version = "23.1.0",  # gvm sdk version format like `24.x.x` also supported
    distribution = "ce",  # `oracle`, `ce`, or `community`
    java_version = "21",  # `17`, `20`, `21`, or `22` as supported by the version provided
)
use_repo(gvm, "graalvm")
register_toolchains("@graalvm//:jvm")
register_toolchains("@graalvm//:sdk") ## Native-image
register_toolchains("@graalvm//:toolchain")

bazel_dep(name = "rules_jvm_external", version = "6.0")

scala_logging_version = "3.9.4"
scalatest_version = "3.3.0-SNAP4"
cats_version = "2.9.0"
circe_version = "0.14.5"
circe_libs = ["circe-core", "circe-generic", "circe-parser"]
circe = ["io.circe:%s_2.13:%s" % (x, circe_version) for x in circe_libs]
commons_text_version = "1.10.0"
http_components_version = "4.4.1"
jackson_version = "2.15.2"
commons_io_version = "2.12.0"
commons_compress_version = "1.23.0"
commons_lang_version = "3.12.0"
junit_version = "4.13.2"
hamcrest_version = "1.3"

## TODO: Consider replacing maven extension with
## https://github.com/bazeltools/bazel-deps
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
## After updating a list of artifacts run
## > bazel run @unpinned_maven//:pin
maven.install(
    artifacts = [
      "com.typesafe.scala-logging:scala-logging_2.13:%s" % scala_logging_version,
      "org.scalatest:scalatest_2.13:%s" % scalatest_version,
      "org.typelevel:cats-core_2.13:%s" % cats_version,
      "org.apache.commons:commons-text:%s" % commons_text_version,
      "org.apache.httpcomponents:httpclient:%s" % http_components_version,
      "com.fasterxml.jackson.core:jackson-databind:%s" % jackson_version,
      "commons-io:commons-io:%s" % commons_io_version,
      "org.apache.commons:commons-compress:%s" % commons_compress_version,
      "org.apache.commons:commons-lang3:%s" % commons_lang_version,
      "junit:junit:%s" % junit_version,
      "org.hamcrest:hamcrest-all:%s" % hamcrest_version,
    ] + circe,
    fail_if_repin_required = True,
    lock_file = "//:maven_install.json",
    repositories = [
        "https://repo.maven.apache.org/maven2",
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(
    maven,
    "maven",
    "unpinned_maven",
)
