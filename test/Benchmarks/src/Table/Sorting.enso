from Standard.Base import all

from Standard.Table import Table, Sort_Column

from Standard.Test import Bench, Phase_Conf

type My
    Data x

type My_Comparator
    compare my_1 my_2 =
        comparator = Comparable.from my_2.x
        comparator.compare my_2.x my_1.x

    hash my =
        comparator = Comparable.from my.x
        comparator.hash my.x

Comparable.from (_:My) = My_Comparator


options = Bench.options . set_warmup (Phase_Conf.Seconds 3) . set_measure (Phase_Conf.Seconds 3)


collect_benches = Bench.build builder->
    vector_size = 100000
    ints = (0.up_to vector_size).to_vector.take (Index_Sub_Range.Sample vector_size 42)
    start = Date_Time.new 1990 1 1
    dates = ints.map x->
        start + (Duration.new seconds=x)
    objects = ints.map My.Data

    ints_table = Table.new [['ints', ints]]
    dates_table = Table.new [['dates', dates]]
    objects_table = Table.new [['objects', objects]]

    builder.group "Table_Sorting" options group_builder->
        group_builder.specify "table_order_by_ints" <|
            ints_table.order_by [Sort_Column.Index 0]

        group_builder.specify "table_order_by_dates" <|
            dates_table.order_by [Sort_Column.Index 0]

        group_builder.specify "table_order_by_objects" <|
            objects_table.order_by [Sort_Column.Index 0]

    builder.group "Vector_Sorting" options group_builder->
        group_builder.specify "vector_sort_ints" <|
            ints.sort

        group_builder.specify "vector_sort_dates" <|
            dates.sort

        group_builder.specify "vector_sort_objects" <|
            objects.sort


main = collect_benches . run_main
