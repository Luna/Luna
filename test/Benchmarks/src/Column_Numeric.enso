from Standard.Base import all

from Standard.Table import Column
from Standard.Test import Bench, Faker


options = Bench.options

collect_benches = Bench.build builder->
    vector_size = 1000000
    ## No specific significance to this constant, just fixed to make generated set deterministic
    fixed_random_seed = 1644575867
    faker = Faker.new fixed_random_seed

    floats_vec = Vector.new vector_size _->(faker.decimal -1000000000 1000000000)
    floats = Column.from_vector "floats" floats_vec

    ints_vec = Vector.new vector_size _->(faker.integer -1000000000 1000000000)
    ints = Column.from_vector "ints" ints_vec

    builder.group "Column_Numeric" options group_builder->
        group_builder.specify "Column_round_floats" <|
            floats.round

        group_builder.specify "Column_truncate_floats" <|
            floats.truncate

        group_builder.specify "Column_ceil_floats" <|
            floats.ceil

        group_builder.specify "Column_floor_floats" <|
            floats.floor

        group_builder.specify "Column_round_ints" <|
            ints.round

        group_builder.specify "Column_truncate_ints" <|
            ints.truncate

        group_builder.specify "Column_ceil_ints" <|
            ints.ceil

        group_builder.specify "Column_floor_ints" <|
            ints.floor


main = collect_benches . run_main
