from Standard.Base import all
import Standard.Base.Errors.Common.Index_Out_Of_Bounds
import Standard.Base.Errors.Common.Unsupported_Argument_Types
import Standard.Base.Data.Arrow_Array_Builder.Arrow_Array_Builder
from Standard.Test import all

foreign arrow new_arrow = """
    new[Int8]

## Used only for testing immutability
Vector.set self at item = set_builtin self at item

set_builtin : (Vector | Array) -> Integer -> Any -> Nothing
set_builtin vector at item = @Builtin_Method "Array_Like_Helpers.set_builtin"

add_specs suite_builder =
    pending = if Polyglot.is_language_installed "arrow" then Nothing else """
        Can't run Arrow tests, Arrow is not installed.

    suite_builder.group "Arrow" pending=pending group_builder->
        group_builder.specify "should allow for creating a new fixed Array in Arrow" <|
            arrow_array_constructor = new_arrow
            array_10 = arrow_array_constructor.new 10
            builder = Arrow_Array_Builder.from_arrow_array array_10

            builder.length . should_equal 10
            builder.at 1 . should_equal Nothing
            builder.at 10 . should_fail_with Index_Out_Of_Bounds
            builder.set 1 10
            builder.at 1 . should_equal 10
            builder.set 8 127
            builder.set 8 128 . should_fail_with Unsupported_Argument_Types
            v = builder.build
            v.set 8 10 . should_fail_with Unsupported_Argument_Types
            v.at 8 . should_equal 127
            builder.set 1 0 . should_fail_with Unsupported_Argument_Types

main =
    suite = Test.build suite_builder->
        add_specs suite_builder
    suite.run_with_filter
