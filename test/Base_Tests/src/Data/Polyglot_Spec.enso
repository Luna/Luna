from Standard.Base import all
import Standard.Base.Errors.Common.Not_Invokable
from Standard.Test import all


polyglot java import java.lang.Double
polyglot java import java.lang.Integer as Java_Integer
polyglot java import java.lang.String
polyglot java import java.time.LocalDate
polyglot java import java.util.function.Function as Java_Function
polyglot java import org.enso.base_test_helpers.IntHolder

pending_js_missing = if Polyglot.is_language_installed "js" then Nothing else "Can't run JavaScript tests, language `js` is not installed."

add_specs suite_builder = suite_builder.group "Polyglot" group_builder->
    group_builder.specify "should be able to invoke a polyglot method by name and pass arguments" <|
        poly_date = LocalDate.now
        date = Date.today.to_date_time

        Polyglot.invoke poly_date "atStartOfDay" [] . should_equal date
        Polyglot.invoke poly_date "atStartOfDay" [].to_array . should_equal date

    group_builder.specify "should be able to create a new polyglot object using the constructor" <|
        Polyglot.new String ["42"] . should_equal "42"
        Polyglot.new String ["42"].to_array . should_equal "42"

    group_builder.specify "use Integer created by constructor" <|
        Polyglot.new Java_Integer [42] . should_equal 42

    group_builder.specify "use Double created by constructor" <|
        Polyglot.new Double [42] . should_equal 42

    group_builder.specify "use Integer read from JavaScript object" pending=pending_js_missing <|
        (Polyglot.get_member js_meaning "meaning") . should_equal 42

    group_builder.specify "access Integer field from JavaScript object" pending=pending_js_missing <|
        js_meaning.meaning . should_equal 42

    group_builder.specify "Execute JavaScript function" pending=pending_js_missing <|
        js_plus 3 5 . should_equal 8

    group_builder.specify "Execute JavaScript with insufficient number of arguments" pending=pending_js_missing <|
        r = js_plus 3
        r.is_nan . should_be_true

    group_builder.specify "Cannot Execute JavaScript number" pending=pending_js_missing <|
        fourty_two = js_meaning.meaning
        Test.expect_panic Not_Invokable <|
            fourty_two "Cannot invoke"

    group_builder.specify "use Integer obtained from a call" <|
        Java_Integer.parseInt "42" . should_equal 42

    group_builder.specify "use Integer obtained from a read" <|
        hold = IntHolder.new (6 * 7)
        hold.value . should_equal 42
        hold.boxed . should_equal 42

    group_builder.specify "should be able to execute a polyglot function object along with corresponding arguments" <|
        fun = Java_Function.identity
        Polyglot.execute fun ["42"] . should_equal "42"
        Polyglot.execute fun ["42"].to_array . should_equal "42"

foreign js js_meaning = """
    return { meaning : 6 * 7 };

foreign js js_plus = """
    return (a, b) => a + b;

main filter=Nothing =
    suite = Test.build suite_builder->
        add_specs suite_builder
    suite.run_with_filter filter

