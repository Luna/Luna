from Standard.Base import all

from Standard.Table import Table
import Standard.Visualization.Geo_Map

from Standard.Test import all


import project.Helpers

add_specs suite_builder =
    expect value expected_json_text =
        result = Geo_Map.process_to_json_text value
        Json.parse result . should_equal <| Json.parse expected_json_text

    suite_builder.group "Geo_Map" group_builder->
        group_builder.specify "skips unrecognized columns" <|
            header = ['α' , 'β' , 'ω']
            row_1  = [11  , 10  , 09 ]
            row_2  = [21  , 20  , 19 ]
            table  = Table.from_rows header [row_1, row_2]
            expect table '{}'

        group_builder.specify "recognizes relevant columns" <|
            header = ['latitude' , 'longitude' , 'color' , 'label' , 'radius']
            row_1  = [11         , 10          , 'red'   , 'name'  , 195     ]
            table  = Table.from_rows header [row_1]
            expect table '{"df_color":["red"],"df_label":["name"],"df_latitude":[11],"df_longitude":[10],"df_radius":[195]}'

        group_builder.specify "is case-insensitive" <|
            header = ['latitude' , 'LONGITUDE' , 'LaBeL']
            row_1  = [11         , 10          , 09     ]
            row_2  = [21         , 20          , 19     ]
            table  = Table.from_rows header [row_1, row_2]
            expect table '{"df_label":[9,19],"df_latitude":[11,21],"df_longitude":[10,20]}'
