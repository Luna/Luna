from Standard.Base import all

import Standard.Table
import Standard.Table.Data.Column_Selector
from Standard.Table.Data.Aggregate_Column import all

import Standard.Test

spec =
    file_contents = (Enso_Project.data / "data.csv") . read
    table = Table.from_csv file_contents

    Test.group "summarize whole table " <|
        Test.specify "should be able to count" <|
            grouped = table.group_by (Column_Selector.By_Index []) [Count Nothing]
            grouped.row_count . should_equal 1
            grouped.columns.length . should_equal 1
            grouped.columns.at 0 . name . should_equal "Count"
            grouped.columns.at 0 . at 0 . should_equal 2500

        Test.specify "should be able to count missing values" <|
            grouped = table.group_by (Column_Selector.By_Index []) [Count_Nothing "Hexadecimal", Count_Not_Nothing "Hexadecimal"]
            grouped.row_count . should_equal 1
            grouped.columns.length . should_equal 2
            grouped.columns.at 0 . name . should_equal "Count Nothing Hexadecimal"
            grouped.columns.at 0 . at 0 . should_equal 236
            grouped.columns.at 1 . name . should_equal "Count Not Nothing Hexadecimal"
            grouped.columns.at 1 . at 0 . should_equal 2264

        Test.specify "should be able to count distinct values" <|
            grouped = table.group_by (Column_Selector.By_Index []) [Count_Distinct "Code", Count_Distinct "Index", Count_Distinct "Flag", Count_Distinct ["Index", "Flag"]]
            grouped.row_count . should_equal 1
            grouped.columns.length . should_equal 4
            grouped.columns.at 0 . name . should_equal "Count Distinct Code"
            grouped.columns.at 0 . at 0 . should_equal 2333
            grouped.columns.at 1 . name . should_equal "Count Distinct Index"
            grouped.columns.at 1 . at 0 . should_equal 10
            grouped.columns.at 2 . name . should_equal "Count Distinct Flag"
            grouped.columns.at 2 . at 0 . should_equal 2
            grouped.columns.at 3 . name . should_equal "Count Distinct Index Flag"
            grouped.columns.at 3 . at 0 . should_equal 20

        Test.specify "should be able to sum, average and standard deviation of values" <|
            grouped = table.group_by (Column_Selector.By_Index []) [Sum "Value", Sum "ValueWithNothing", Average "Value", Average "ValueWithNothing", Standard_Deviation "Value", Standard_Deviation "ValueWithNothing", (Standard_Deviation "Value" population=True), (Standard_Deviation "ValueWithNothing" population=True)]
            grouped.row_count . should_equal 1
            grouped.columns.length . should_equal 8
            grouped.columns.at 0 . name . should_equal "Sum Value"
            grouped.columns.at 0 . at 0 . should_equal -932.411550 epsilon=0.000001
            grouped.columns.at 1 . name . should_equal "Sum ValueWithNothing"
            grouped.columns.at 1 . at 0 . should_equal 2757.09 epsilon=0.000001
            grouped.columns.at 2 . name . should_equal "Average Value"
            grouped.columns.at 2 . at 0 . should_equal -0.372965 epsilon=0.000001
            grouped.columns.at 3 . name . should_equal "Average ValueWithNothing"
            grouped.columns.at 3 . at 0 . should_equal 1.228650 epsilon=0.000001
            grouped.columns.at 4 . name . should_equal "Standard Deviation Value"
            grouped.columns.at 4 . at 0 . should_equal 56.708660 epsilon=0.000001
            grouped.columns.at 5 . name . should_equal "Standard Deviation ValueWithNothing"
            grouped.columns.at 5 . at 0 . should_equal 58.588610 epsilon=0.000001
            grouped.columns.at 6 . name . should_equal "Standard Deviation Value_1"
            grouped.columns.at 6 . at 0 . should_equal 56.697317 epsilon=0.000001
            grouped.columns.at 7 . name . should_equal "Standard Deviation ValueWithNothing_1"
            grouped.columns.at 7 . at 0 . should_equal 58.575554 epsilon=0.000001

main = Test.Suite.run_main here.spec
