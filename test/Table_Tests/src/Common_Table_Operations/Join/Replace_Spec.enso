from Standard.Base import all
import Standard.Base.Errors.Illegal_Argument.Illegal_Argument

from Standard.Table import all
from Standard.Table.Errors import all

from Standard.Database import all
from Standard.Database.Errors import Unsupported_Database_Operation, Invariant_Violation, Integrity_Error

from Standard.Test_New import all

from project.Common_Table_Operations.Util import run_default_backend, within_table
import project.Util

main = run_default_backend add_specs

type Data
    Value ~connection

    setup create_connection_fn =
        Data.Value (create_connection_fn Nothing)

    teardown self = self.connection.close


add_specs suite_builder setup =
    prefix = setup.prefix
    create_connection_fn = setup.create_connection_func
    materialize = setup.materialize
    suite_builder.group prefix+"Table.replace" group_builder->
        data = Data.setup create_connection_fn

        group_builder.teardown <|
            data.teardown

        table_builder cols =
            setup.table_builder cols connection=data.connection

        group_builder.specify "should be able to replace values via a lookup table" <|
            table = table_builder [['x', [1, 2, 3, 4]], ['y', ['a', 'b', 'c', 'd']]]
            lookup_table = table_builder [['x', [1, 2, 3, 4]], ['z', [10, 20, 30, 40]]]
            result = table.replace lookup_table column_to_modify='x'
            expected = table_builder [['x', [10, 20, 30, 40]], ['y', ['a', 'b', 'c', 'd']]]
            result . should_equal expected
