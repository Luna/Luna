from Standard.Base import all

from Standard.Test import Test_Suite

import project.Common_Table_Operations.Column_Operations_Spec
import project.Common_Table_Operations.Core_Spec
#import project.Common_Table_Operations.Expression_Spec
import project.Common_Table_Operations.Filter_Spec
import project.Common_Table_Operations.Join_Spec
import project.Common_Table_Operations.Missing_Values_Spec
import project.Common_Table_Operations.Order_By_Spec
import project.Common_Table_Operations.Select_Columns_Spec
import project.Common_Table_Operations.Take_Drop_Spec

import project.In_Memory.Table_Spec as In_Memory_Table_Spec

type Test_Selection
    Config supports_case_sensitive_columns=True order_by=True natural_ordering=False case_insensitive_ordering=True order_by_unicode_normalization_by_default=False case_insensitive_ascii_only=False take_drop=True allows_mixed_type_comparisons=True supports_unicode_normalization=False is_nan_and_nothing_distinct=True

## A common test suite for shared operations on the Table API.

   It is meant to be able to be re-used by tests for the in-memory and various
   database backends.

   Arguments:
   - prefix: A prefix to attach to the names of test groups, for easier
     identification.
   - table_builder: A function which takes a list of column descriptions and
     builds a Table using the backend that is meant to be tested. Each column
     description is a triple of column name, column type and a vector containing
     column elements.
   - test_selection: A selection of which suites should be run. Can be used to
     skip checks for backends which do not support particular features.
spec prefix table_builder test_selection =
    Core_Spec.spec prefix table_builder test_selection
    Select_Columns_Spec.spec prefix table_builder test_selection
    Column_Operations_Spec.spec prefix table_builder test_selection
    Filter_Spec.spec prefix table_builder test_selection
    Missing_Values_Spec.spec prefix table_builder test_selection
    Order_By_Spec.spec prefix table_builder test_selection
    Take_Drop_Spec.spec prefix table_builder test_selection
    # Expression_Spec.spec prefix table_builder test_selection
    Join_Spec.spec prefix table_builder test_selection

## These tests are parametrized by various backends and so they should be run in
   context of a specific backend. However, for the purpose of testing we provide
   a shortcut that allows to run these tests with the in-memory backend by
   running the Main file.
main =
    Test_Suite.run_main In_Memory_Table_Spec.common_spec
