from Standard.Base import all

import Standard.Base.Data.Locale.Locale
import Standard.Base.Data.Time.Date.Date
import Standard.Base.Errors.Illegal_Argument.Illegal_Argument
import Standard.Test.Extensions

from Standard.Table import Column, Value_Type
from Standard.Test import Test, Test_Suite
from project.Util import all

spec =
    Test.group "Column.format" <|
        Test.specify "Date column" <|
            input = Column.from_vector "dates" [Date.new 2020 12 21, Date.new 2023 4 25]
            expected = Column.from_vector "dates" ["20201221", "20230425"]
            actual = input.format "yyyyMMdd"
            actual . should_equal expected

        Test.specify "Date with locale" <|
            input = Column.from_vector "dates" [Date.new 2020 6 21, Date.new 2023 4 25]
            expected_default = Column.from_vector "dates" ["21. Jun 2020", "25. Apr 2023"]
            expected_gb = Column.from_vector "dates" ["21. Jun 2020", "25. Apr 2023"]
            expected_fr = Column.from_vector "dates" ["21. juin 2020", "25. avril 2023"]
            input.format "d. MMMM yyyy" . should_equal expected_default
            input.format "d. MMMM yyyy" (Locale.default) . should_equal expected_default
            input.format "d. MMMM yyyy" (Locale.new "gb") . should_equal expected_gb
            input.format "d. MMMM yyyy" (Locale.new "fr") . should_equal expected_fr

main = Test_Suite.run_main spec
