from Standard.Base import all

import project.Util
from project.Util import all

import Standard.Base.Errors.Common.Arithmetic_Error
import Standard.Base.Errors.Common.Index_Out_Of_Bounds
import Standard.Base.Errors.Common.Type_Error
import Standard.Base.Errors.Illegal_Argument.Illegal_Argument
import Standard.Test.Extensions

from Standard.Table import Column, Value_Type, Auto, Bits
from Standard.Table.Errors import Invalid_Value_Type, Invalid_Column_Names
from Standard.Table.Text_Cleanse import all

from Standard.Test import all

main filter=Nothing =
    suite = Test.build suite_builder->
        add_specs suite_builder
    suite.run_with_filter filter


add_specs suite_builder =
    suite_builder.group "Column Text Cleanse" group_builder->
        test_col = Column.from_vector "Test" ["  It was", "the best  ", "of  times", "  it was  the  worst  of  times  "]

        group_builder.specify "should remove leading whitespace" <|
            expected_col = Column.from_vector "Test" ["It was", "the best  ", "of  times", "it was  the  worst  of  times  "]
            res = test_col.text_cleanse [Text_Cleanse.Leading_Whitespace]
            res.should_equal expected_col
        group_builder.specify "should remove trailing whitespace" <|
            expected_col = Column.from_vector "Test" ["  It was", "the best", "of  times", "  it was  the  worst  of  times"]
            res = test_col.text_cleanse [Text_Cleanse.Trailing_Whitespace]
            res.should_equal expected_col
        group_builder.specify "should remove duplicate whitespace" <|
            expected_col = Column.from_vector "Test" [" It was", "the best ", "of times", " it was the worst of times "]
            res = test_col.text_cleanse [Text_Cleanse.Duplicate_Whitespace]
            res.should_equal expected_col
        group_builder.specify "should remove leading and trailing whitespace" <|
            expected_col = Column.from_vector "Test" ["It was", "the best", "of  times", "it was  the  worst  of  times"]
            res = test_col.text_cleanse [Text_Cleanse.Leading_Whitespace, Text_Cleanse.Trailing_Whitespace]
            res.should_equal expected_col
    suite_builder.group "Text Cleanse" group_builder->
        input = "  It was the best  of  times  it was  the  worst  of  times  "
        group_builder.specify "should remove leading whitespace" <|
            expected = "It was the best  of  times  it was  the  worst  of  times  "
            res = input.cleanse [Text_Cleanse.Leading_Whitespace]
            res.should_equal expected
        group_builder.specify "should remove trailing whitespace" <|
            expected = "  It was the best  of  times  it was  the  worst  of  times"
            res = input.cleanse [Text_Cleanse.Trailing_Whitespace]
            res.should_equal expected
        group_builder.specify "should remove duplicate whitespace" <|
            expected = " It was the best of times it was the worst of times "
            res = input.cleanse [Text_Cleanse.Duplicate_Whitespace]
            res.should_equal expected
        group_builder.specify "should remove leading and trailing whitespace" <|
            expected = "It was the best  of  times  it was  the  worst  of  times"
            res = input.cleanse [Text_Cleanse.Leading_Whitespace, Text_Cleanse.Trailing_Whitespace]
            res.should_equal expected
