from Standard.Base import all

import Standard.Table.Data.Table_Conversions
from Standard.Table import Table, Column

from Standard.Test import Test, Test_Suite, Problems
import Standard.Test.Extensions

from project.Util import all

spec =
    single_values = [Nothing, 12, 13.4, True, "hello", Date.new 2023 10 6, Time_Of_Day.new 3 4 5 200, Date_Time.new 2023 11 7 2 3 4]

    Test.group "Single values" <|
        Test.specify "Can create a table from a single value" <|
            single_values.map v->
                expected = Table.from_rows ["Value"] [[v]]
                Table.from_objects v . should_equal expected

        Test.specify "Can create a table from a vector of single values" <|
            expected = Table.new [["Value", single_values]]
            Table.from_objects single_values . should_equal expected

        Test.specify "A single value with a field list results in columns of Nothing" <|
            expected = Table.new [["aaa", [Nothing]], ["bbb", [Nothing]]]
            Table.from_objects 1 ['aaa', 'bbb'] . should_equal expected

        Test.specify "A single value with the field list [Value] results in a column with the value" <|
            expected = Table.new [["Value", [1]], ["bbb", [Nothing]]]
            Table.from_objects 1 ["Value", "bbb"] . should_equal expected

        Test.specify "A vector of single values with a field list results in a column of Nothing" <|
            expected = Table.new [["aaa", [Nothing, Nothing]], ["bbb", [Nothing, Nothing]]]
            Table.from_objects [1, 2] ['aaa', 'bbb'] . should_equal expected

main = Test_Suite.run_main spec
