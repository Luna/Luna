from Standard.Base import all
import Standard.Base.Error.Encoding_Error.Encoding_Error
import Standard.Base.Error.Illegal_Argument.Illegal_Argument

from Standard.Table import Table, Column, Data_Formatter, Quote_Style, Column_Name_Mapping, Match_Columns, Delimited
from Standard.Table.Errors import all

from Standard.Test import Test, Test_Suite, Problems
import Standard.Test.Extensions

from project.Util import all

type My_Type
    Value x

    to_text : Text
    to_text self = "[[[My Type :: " + self.x.to_text + "]]]"

default_line_endings_for_new_files = Line_Ending_Style.Unix
join_lines lines trailing_newline=True =
    eol = default_line_endings_for_new_files.to_text
    if trailing_newline then lines.join eol suffix=eol else lines.join eol

spec =
    line_ending_pairs = [[Line_Ending_Style.Unix, '\n'], [Line_Ending_Style.Windows, '\r\n'], [Line_Ending_Style.Mac_Legacy, '\r']]
    Test.group "Delimited File Writing" <|
        Test.specify 'should not quote values if quoting is disabled' <|
            format = Delimited "," value_formatter=(Data_Formatter.Value decimal_point=",") . without_quotes
            table = Table.new [['The Column "Name"', ["foo","'bar'",'"baz"', 'one, two, three']], ["Hello, Column?", [1.0, 1000000.5, 2.2, -1.5]]]
            file = (enso_project.data / "transient" / "quote_disabled.csv")
            file.delete_if_exists
            r = table.write file format on_problems=Report_Error
            r.should_equal file
            warnings = Problems.get_attached_warnings r
            warnings.should_contain_the_same_elements_as [Unquoted_Characters_In_Output.Warning "Hello, Column?" [-1, 0, 1, 2, 3], Unquoted_Characters_In_Output.Warning 'The Column "Name"' [-1, 2, 3]]
            w1 = warnings.find w-> w.column == 'Hello, Column?'
            w1.to_display_text . should_equal "The Hello, Column? at rows [the header, 0, 1, 2, 3] contains characters that need quoting, but quoting is disabled. The generated file may be corrupted."
            expected_text = normalize_lines <| """
                The Column "Name",Hello, Column?
                foo,1,0
                'bar',1000000,5
                "baz",2,2
                one, two, three,-1,5
            text = Data.read_text file
            text.should_equal expected_text
            file.delete

main = Test_Suite.run_main spec
