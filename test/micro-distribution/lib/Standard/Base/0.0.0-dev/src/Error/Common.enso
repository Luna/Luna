from project.Data.Any import Any

@Builtin_Type
type Panic
    throw payload = @Builtin_Method "Panic.throw"
    catch_primitive ~action handler = @Builtin_Method "Panic.catch_primitive"

# TODO Dubious constructor export
from project.Error.Common.Syntax_Error import all
from project.Error.Common.Syntax_Error export all
@Builtin_Type
type Syntax_Error
    Syntax_Error_Data message

    to_display_text self = @Builtin_Method "Syntax_Error.to_display_text"

# TODO Dubious constructor export
from project.Error.Common.Polyglot_Error import all
from project.Error.Common.Polyglot_Error export all
@Builtin_Type
type Polyglot_Error
    Polyglot_Error_Data cause

    to_display_text self = @Builtin_Method "Polyglot_Error.to_display_text"

# TODO Dubious constructor export
from project.Error.Common.Arithmetic_Error import all
from project.Error.Common.Arithmetic_Error export all
@Builtin_Type
type Arithmetic_Error
    Arithmetic_Error_Data message

    to_display_text self = @Builtin_Method "Arithmetic_Error.to_display_text"

# TODO Dubious constructor export
from project.Error.Common.Type_Error import all
from project.Error.Common.Type_Error export all
@Builtin_Type
type Type_Error
    Type_Error_Data expected actual name

    to_display_text self = @Builtin_Method "Type_Error.to_display_text"

# TODO Dubious constructor export
from project.Error.Common.Compile_Error import all
from project.Error.Common.Compile_Error export all
@Builtin_Type
type Compile_Error
    Compile_Error_Data message

    to_display_text self = @Builtin_Method "Compile_Error.to_display_text"

# TODO Dubious constructor export
from project.Error.Common.Inexhaustive_Pattern_Match_Error import all
from project.Error.Common.Inexhaustive_Pattern_Match_Error export all
@Builtin_Type
type Inexhaustive_Pattern_Match_Error
    Inexhaustive_Pattern_Match_Error_Data scrutinee

    to_display_text self = @Builtin_Method "Inexhaustive_Pattern_Match_Error.to_display_text"

# TODO Dubious constructor export
from project.Error.Common.Arity_Error import all
from project.Error.Common.Arity_Error export all
@Builtin_Type
type Arity_Error
    Arity_Error_Data expected_min expected_max actual

    to_display_text self = @Builtin_Method "Arity_Error.to_display_text"

@Builtin_Type
type Error
    throw payload = @Builtin_Method "Error.throw"
    catch_primitive self handler = @Builtin_Method "Error.catch_primitive"
    catch self (error_type = Any) (handler = x->x) =
        _ = error_type
        self.catch_primitive handler
