from Standard.Base import all

polyglot java import org.enso.base.Text_Utils
import Standard.Test

polyglot java import com.ibm.icu.text.BreakIterator
spec =
    Test.group "Text_Utils" <|
        kshi = '\u0915\u094D\u0937\u093F'
        facepalm = '\u{1F926}\u{1F3FC}\u200D\u2642\uFE0F'
        text = "a"+kshi+facepalm+'e\u{301}Z'
        codepoints_to_graphemes = _.flatten <| text.characters.map_with_index ix-> grapheme->
            codepoints_count = grapheme.utf_16.length
            Vector.new codepoints_count _->ix

        Test.specify "should correctly translate an codepoint index to a grapheme index" <|
            codepoints_to_graphemes . each_with_index codepoint_ix-> grapheme_ix->
                found_grapheme_ix = Text_Utils.codepoint_index_to_grapheme_index text codepoint_ix
                found_grapheme_ix.should_equal grapheme_ix

        Test.specify "should correctly translate a series of codepoint indices to a grapheme indices in a batch" <|
            codepoint_indices = Vector.new text.utf_16.length ix->ix
            found_grapheme_indices = Vector.from_array <| Text_Utils.codepoint_indices_to_grapheme_indices text codepoint_indices.to_array
            found_grapheme_indices.should_equal codepoints_to_graphemes

main = Test.Suite.run_main here.spec
