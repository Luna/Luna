from Standard.Base import all

import Standard.Test

spec name create_new_date =
    Test.group (name + "date part tests")  <|
        Test.specify "should return if a leap year" <|
            create_new_date 2022 8 25 . is_leap_year . should_equal False
            create_new_date 1999 12 31 . is_leap_year . should_equal False
            create_new_date 1996 6 19 . is_leap_year . should_equal True
            create_new_date 2000 1 1 . is_leap_year . should_equal True
            create_new_date 1900 1 1 . is_leap_year . should_equal False

        Test.specify "should return the correct century" <|
            create_new_date 2022 8 25 . century . should_equal 21
            create_new_date 1999 12 31 . century . should_equal 20
            create_new_date 2000 1 1 . century . should_equal 20
            create_new_date 2001 1 1 . century . should_equal 21

        Test.specify "should return the correct quarter" <|
            create_new_date 2022 2 1 . quarter . should_equal 1
            create_new_date 1987 1 1 . quarter . should_equal 1
            create_new_date 1996 2 29 . quarter . should_equal 1
            create_new_date 2000 3 31 . quarter . should_equal 1
            create_new_date 2017 5 16 . quarter . should_equal 2
            create_new_date 2019 6 30 . quarter . should_equal 2
            create_new_date 2019 7 1 . quarter . should_equal 3
            create_new_date 2019 9 30 . quarter . should_equal 3
            create_new_date 2019 10 1 . quarter . should_equal 4
            create_new_date 2019 12 31 . quarter . should_equal 4

        Test.specify "should return the correct week of year" <|
            date_1 = create_new_date 2021 8 1
            date_1.week_of_year Locale.mexico . should_equal 32

            date_2 = create_new_date 2021 1 1
            date_2.week_of_year Locale.us . should_equal 1
            date_2.week_of_year Locale.uk . should_equal 0
