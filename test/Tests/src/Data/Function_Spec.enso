from Standard.Base import all
import Standard.Base.Error.Common.Incomparable_Values

from Standard.Test import Test, Test_Suite
import Standard.Test.Extensions

spec =
    Test.group "identity" <|
        Test.specify "identity on number" <|
            (identity 5) . should_equal 5

        Test.specify "identity on text" <|
            (identity '5') . should_equal '5'

        Test.specify "identity on boolean" <|
            (identity False) . should_equal False

    Test.group "flip" <|
        Test.specify "flip on number" <|
            (flip (-) 2 5) . should_equal 3

        Test.specify "flip on text" <|
            (flip (+) "world" "hello") . should_equal "helloworld"

    Test.group "const" <|
        Test.specify "const on number" <|
            two = const 2
            two 5 . should_equal 2

    Test.group "curry" <|
        Test.specify "curry on number list" <|
            sum = x -> x.fold 0 (+)
            sum [1, 2, 3, 4] . should_equal 10
            plus = curry sum
            plus 6 3 . should_equal 9

    Test.group "uncurry" <|
        Test.specify "uncurry on number list" <|
            times = uncurry (*)
            times [6, 7] . should_equal 42

    Test.group "Functions" <|
        Test.specify "Functions should have Incomparable comparator" <|
            is_incomparable func = Meta.is_same_object (Comparable.from func) Incomparable
            my_func x y = x + y

            is_incomparable (x-> x+1) . should_be_true
            is_incomparable my_func . should_be_true
            is_incomparable (my_func 1) . should_be_true

        Test.specify "Functions should be incomparable" <|
            my_func x = x + 1
            (my_func == my_func).should_be_false
            (my_func == Nothing).should_be_false
            (my_func == Ordering.compare).should_be_false
            (Ordering.compare == Ordering.compare).should_be_false
            (Pair.Value == Pair.Value).should_be_false
            (identity == identity).should_be_false
            (identity < identity).should_fail_with Incomparable_Values

main = Test_Suite.run_main spec
