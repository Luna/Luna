from Standard.Base import all
import Standard.Base.Errors.File_Error.File_Error
import Standard.Base.Errors.Illegal_Argument.Illegal_Argument
import Standard.Base.Errors.Illegal_State.Illegal_State
import Standard.Base.Runtime.Context

from Standard.Test import Test, Test_Suite, Problems
import Standard.Test.Extensions

spec =
    Test.group "Temporary_File facility" <|
        Test.specify "should allow to create a new file and allow to dispose it manually" <|
            Error.throw "TODO"

        Test.specify "should allow to create a new file and allow to dispose it once the reference is dropped" <|
            Error.throw "TODO GC test"

        Test.specify "should allow to materialize an input stream, regardless of Output Context settings" <|
            Error.throw "TODO"

        Test.specify "will fail if materializing an already closed input stream" <|
            Error.throw "TODO"

        Test.specify "should be able to be converted to text, and indicate if it was disposed" <|
            Error.throw "TODO"
