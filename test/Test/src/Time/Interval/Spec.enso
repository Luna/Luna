from Base import all

import Base.Test
import Base.Time.Interval
import Base.Time.Local_Time
import Base.Time.Local_Date_Time

spec =
    describe "Interval" <|
        it "should create interval seconds" <|
            interval = 5.seconds
            interval.to_vector . should_equal [0, 0, 0, 0, 0, 5, 0]
        it "should create interval months" <|
            interval = 9.months
            interval.to_vector . should_equal [0, 9, 0, 0, 0, 0, 0]
        it "should add days to nanoseconds" <|
            interval = 7.nanoseconds . plus 3.days
            interval.to_vector . should_equal [0, 0, 3, 0, 0, 0, 7]
        it "should add milliseconds to years" <|
            interval = 4.years . plus 8.millis
            interval.to_vector . should_equal [4, 0, 0, 0, 0, 0, 8000000]
        it "should substract seconds from months" <|
            interval = 8.months . minus 8.seconds
            interval.to_vector . should_equal [0, 8, 0, 0, 0, -8, 0]
        it "should subtract years from hours" <|
            interval = 2.hours . minus 11.years
            interval.to_vector . should_equal [-11, 0, 0, 2, 0, 0, 0]
        it "should create interval between two times" <|
            time1 = Local_Time.new 0 0 1
            time2 = Local_Time.new 0 0 10
            interval = Interval.between time1 time2
            interval.to_vector . should_equal [0, 0, 0, 0, 0, 9, 0]
        it "should create interval between two dates" <|
            time1 = Local_Date_Time.new 2001 1 2
            time2 = Local_Date_Time.new 2001 2 1
            interval = Interval.between time1 time2
            interval.to_vector . should_equal [0, 0, 0, 720, 0, 0, 0]
