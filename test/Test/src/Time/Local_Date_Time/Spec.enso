from Base import all

import Base.Test
import Base.Time.Duration
import Base.Time.Period
import Base.Time.Instant
import Base.Time.Local_Date_Time
import Base.Time.Zone_Offset

spec =
    describe "Local_Date_Time" <|
        it "should create local date time" <|
            time = Local_Date_Time.new
            time . get_year . should_equal 1970
            time . get_month . should_equal 1
            time . get_day . should_equal 1
            time . get_hour . should_equal 0
            time . get_minute . should_equal 0
            time . get_second . should_equal 0
            time . get_nanosecond . should_equal 0
            time . to_epoch_second Zone_Offset.utc . should_equal 0
        it "should create local date time from instant" <|
            instant = Instant.new 1970 1 1 0 0 1
            time = Local_Date_Time.of_instant instant Zone_Offset.utc
            time . to_epoch_second Zone_Offset.utc . should_equal 1
        it "should parse local date time" <|
            time = Local_Date_Time.parse "1970-01-01T00:00:01.00"
            time . to_epoch_second Zone_Offset.utc . should_equal 1
        it "should add duration" <|
            date = Local_Date_Time.new.plus 1.nanosecond
            date . get_year . should_equal 1970
            date . get_month . should_equal 1
            date . get_day . should_equal 1
            date . get_hour . should_equal 0
            date . get_minute . should_equal 0
            date . get_second . should_equal 0
            date . get_nanosecond . should_equal 1
        it "should add period" <|
            date = Local_Date_Time.new.plus 1.month
            date . get_year . should_equal 1970
            date . get_month . should_equal 2
            date . get_day . should_equal 1
            date . get_hour . should_equal 0
            date . get_minute . should_equal 0
            date . get_second . should_equal 0
            date . get_nanosecond . should_equal 0
        it "should subtract duration" <|
            date = Local_Date_Time.new.minus 1.hour
            date . get_year . should_equal 1969
            date . get_month . should_equal 12
            date . get_day . should_equal 31
            date . get_hour . should_equal 23
            date . get_minute . should_equal 0
            date . get_second . should_equal 0
            date . get_nanosecond . should_equal 0
        it "should subtract period" <|
            date = Local_Date_Time.new.minus 1.month
            date . get_year . should_equal 1969
            date . get_month . should_equal 12
            date . get_day . should_equal 1
            date . get_hour . should_equal 0
            date . get_minute . should_equal 0
            date . get_second . should_equal 0
            date . get_nanosecond . should_equal 0
