from Base import all

import Base.Test
import Base.Time.Duration
import Base.Time.Local_Time

spec =
    describe "Duration" <|
        it "should create duration seconds" <|
            time_unit = 5
            duration1 = time_unit.second
            duration2 = time_unit.seconds
            duration1 . to_seconds . should_equal (duration2 . to_seconds)
        it "should parse duration" <|
            duration = Duration.parse "PT10M"
            duration . to_seconds . should_equal 600
        it "should create duration in between two dates" <|
            instant1 = Local_Time.new 0 0 1
            instant2 = Local_Time.new 0 0 10
            duration = Duration.between instant1 instant2
            duration . to_seconds . should_equal 9
        it "should add duration"
            duration = 1.hour.plus 1.minute
            duration . to_seconds . should_equal 3660
        it "should subtract duration"
            duration = 1.hour.minus 1.minute
            duration . to_seconds . should_equal 3540
