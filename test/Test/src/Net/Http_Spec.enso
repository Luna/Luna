from Base import all

import Base.Test
import Base.Net.Http
import Base.Net.Http.Auth
import Base.Net.Http.Form
import Base.Net.Http.Header
import Base.Net.Http.Request
import Base.Net.Http.Request.Body as Request_Body
import Base.Net.Http.Status_Code
import Base.Net.Proxy
import Base.Net.Uri
import Base.System.File
import Base.Time.Duration

polyglot java import java.lang.System
polyglot java import java.util.Objects

spec =
    is_ci = Objects.equals ["true", System.getenv ["CI"]]
    if is_ci then here.spec_impl else Unit

spec_impl =
    describe "Http" <|
        it "should create HTTP client with timeout setting" <|
            http = Http.new (timeout = 30.seconds)
            http.timeout.should_equal 30.seconds
        it "should create HTTP client with auth setting" <|
            basic_auth = Auth.Basic_Auth "user" "pass"
            http = Http.new (auth = basic_auth)
            http.auth.should_equal basic_auth
        it "should create HTTP client with follow_redirects setting" <|
            http = Http.new (follow_redirects = False)
            http.follow_redirects.should_equal False
        it "should create HTTP client with proxy setting" <|
            proxy_setting = Proxy.Proxy_Addr "example.com" 80
            http = Http.new (proxy = proxy_setting)
            http.proxy.should_equal proxy_setting
        it "should send GET request" <|
            res = Http.new.get "http://localhost:8080/get"
            res.code.should_equal Status_Code.ok
        it "should POST empty body" <|
            body_empty = Request_Body.Empty
            res = Http.new.post "http://localhost:8080/post" body_empty
            res.code.should_equal Status_Code.ok
        it "should POST text body" <|
            body_text = Request_Body.Text "Hello World!"
            res = Http.new.post "http://localhost:8080/post" body_text
            res.code.should_equal Status_Code.ok
        it "should POST form text" <|
            form_parts = [Form.text_field "key" "val"]
            res = Http.new.post_form "http://localhost:8080/post" form_parts
            res.code.should_equal Status_Code.ok
        it "should POST form file" <|
            test_file = Enso_Project.data / "sample.txt"
            form_parts = [Form.text_field "key" "val", Form.file_field "sample" test_file]
            res = Http.new.post_form "http://localhost:8080/post" form_parts
            res.code.should_equal Status_Code.ok
        it "should POST form multipart" <|
            test_file = Enso_Project.data / "sample.txt"
            form_parts = [Form.text_field "key" "val", Form.file_field "sample" test_file]
            res = Http.new.post_form "http://localhost:8080/post" form_parts [Header.multipart_form_data]
            res.code.should_equal Status_Code.ok
        it "should POST Json" <|
            json = '''
                {"key":"val"}
            res = Http.new.post_json "http://localhost:8080/post" json
            res.code.should_equal Status_Code.ok
