---------------------------------------------------
-- This is a generated cabal configuration file. --
-- DO NOT EDIT!                                  --
-- Use gencabal instead.                         --
---------------------------------------------------

Name:           luna-core
Version:        0.1
Cabal-Version:  >= 1.8
--License-file:   LICENSE
Author:         New Byte Order <contact@newbyteorder.com>
Maintainer:     New Byte Order <contact@newbyteorder.com>
Build-Type:     Simple

Flag lunaExe
  Description: Luna executable
  Default:     True

Flag infExe
  Description: Inference test
  Default:     True

Flag intExe
  Description: Interpreter test
  Default:     True

-- 'cabal install --enable-benchmarks -f-graph-benchmarks' to disable graph-benchmarks suite
flag graph-benchmarks
  manual: True
  default: True


Library
    default-language: Haskell2010
    hs-source-dirs: src
    ghc-options:
                    -- -dshow-passes
                    -- -F -pgmF ./util/preprocessors/imports.py
    extensions:   ConstraintKinds
                  DataKinds
                  DefaultSignatures
                  DeriveDataTypeable
                  DeriveFoldable
                  DeriveFunctor
                  DeriveGeneric
                  DeriveTraversable
                  DoAndIfThenElse
                  EmptyDataDecls
                  FlexibleContexts
                  FlexibleInstances
                  FunctionalDependencies
                  GeneralizedNewtypeDeriving
                  InstanceSigs
                  LambdaCase
                  MultiParamTypeClasses
                  NoImplicitPrelude
                  OverloadedStrings
                  PackageImports
                  ScopedTypeVariables
                  StandaloneDeriving
                  TemplateHaskell
                  TupleSections
                  TypeFamilies
                  TypeOperators
                  ViewPatterns

    exposed-modules: 
        Control.Monad.Delayed,
        Control.Monad.Event,
        Data.Build,
        Data.Direction,
        Data.Graph,
        Data.Graph.Backend.VectorGraph,
        Data.Graph.Backend.VectorGraph.Class,
        Data.Graph.Backend.VectorGraph.SubGraph,
        Data.Graph.Builder,
        Data.Graph.Builder.Class,
        Data.Graph.Builder.Ref,
        Data.Graph.Builder.SubGraph,
        Data.Graph.Builders,
        Data.Graph.Model,
        Data.Graph.Model.Class,
        Data.Graph.Model.Cluster,
        Data.Graph.Model.Edge,
        Data.Graph.Model.Events,
        Data.Graph.Model.Node,
        Data.Graph.Model.Ref,
        Data.Graph.Query,
        Data.Graph.Query.Sort,
        Data.Graph.Type,
        Data.Graph.Type.Dynamic,
        Data.Graph.Type.Hetero,
        Data.Index,
        Data.Record,
        Data.Record.Class,
        Data.Record.Match,
        Data.Relation.Order,
        Data.Relation.Order.Partial,
        Data.Reprx,
        Data.Text.CodeBuilder,
        Data.Text.CodeBuilder.Builder,
        Data.Text.CodeBuilder.Doc,
        Data.Text.CodeBuilder.Tok,
        Data.Version.Semantic,
        Luna.Compilation.Env.Class,
        Luna.Compilation.Pass.Dirty.Data.CallPointPath,
        Luna.Compilation.Pass.Dirty.Data.Env,
        Luna.Compilation.Pass.Dirty.Data.Label,
        Luna.Compilation.Pass.Dirty.Dirty,
        Luna.Compilation.Pass.Dirty.Handler,
        Luna.Compilation.Pass.Dirty.Monad,
        Luna.Compilation.Pass.Inference.Calling,
        Luna.Compilation.Pass.Inference.Importing,
        Luna.Compilation.Pass.Inference.Literals,
        Luna.Compilation.Pass.Inference.Scan,
        Luna.Compilation.Pass.Inference.Struct,
        Luna.Compilation.Pass.Inference.Unification,
        Luna.Compilation.Pass.Interpreter.Class,
        Luna.Compilation.Pass.Interpreter.Env,
        Luna.Compilation.Pass.Interpreter.Interpreter,
        Luna.Compilation.Pass.Interpreter.Layer,
        Luna.Compilation.Pass.Utils.Literals,
        Luna.Compilation.Pass.Utils.SubtreeWalk,
        Luna.Compilation.Stage.Class,
        Luna.Compilation.Stage.TypeCheck,
        Luna.Compilation.Stage.TypeCheck.Class,
        Luna.Data.Name,
        Luna.Data.Name.Class,
        Luna.Data.Name.FastString,
        Luna.Diagnostic.Info,
        Luna.Diagnostic.Monitor,
        Luna.Diagnostic.Vis.GraphViz,
        Luna.Evaluation.Model,
        Luna.Evaluation.NodeRunner,
        Luna.Evaluation.Runtime,
        Luna.Evaluation.Session,
        Luna.Evaluation.Strategy,
        Luna.Extension.Pragma,
        Luna.Library.Standard,
        Luna.Library.Symbol.Class,
        Luna.Library.Symbol.QualPath,
        Luna.Syntax.AST,
        Luna.Syntax.AST.Core,
        Luna.Syntax.AST.Function,
        Luna.Syntax.AST.Function.Argument,
        Luna.Syntax.AST.Function.Class,
        Luna.Syntax.AST.Function.Signature,
        Luna.Syntax.AST.Module,
        Luna.Syntax.AST.Term,
        Luna.Syntax.AST.Term.Atom,
        Luna.Syntax.AST.Term.Builder,
        Luna.Syntax.AST.Term.Class,
        Luna.Syntax.AST.Term.Eval,
        Luna.Syntax.AST.Term.Lit,
        Luna.Syntax.Builder,
        Luna.Syntax.Ident,
        Luna.Syntax.Ident.Class,
        Luna.Syntax.Ident.Pool,
        Luna.Syntax.Ident.Type,
        Luna.Syntax.Model.Layer,
        Luna.Syntax.Model.Network,
        Luna.Syntax.Model.Network.Builder,
        Luna.Syntax.Model.Network.Builder.Class,
        Luna.Syntax.Model.Network.Builder.Layer,
        Luna.Syntax.Model.Network.Builder.Layers.MembershipTracking,
        Luna.Syntax.Model.Network.Builder.Layers.SuccTracking,
        Luna.Syntax.Model.Network.Builder.Layers.TCData,
        Luna.Syntax.Model.Network.Builder.Node,
        Luna.Syntax.Model.Network.Builder.Node.Class,
        Luna.Syntax.Model.Network.Builder.Node.Inferred,
        Luna.Syntax.Model.Network.Builder.Self,
        Luna.Syntax.Model.Network.Builder.Structural,
        Luna.Syntax.Model.Network.Builder.Structural.Merging,
        Luna.Syntax.Model.Network.Builder.Structural.Removal,
        Luna.Syntax.Model.Network.Builder.Term,
        Luna.Syntax.Model.Network.Builder.Term.Class,
        Luna.Syntax.Model.Network.Builder.Term.Inferred,
        Luna.Syntax.Model.Network.Builder.Type,
        Luna.Syntax.Model.Network.Class,
        Luna.Syntax.Model.Network.Graph,
        Luna.Syntax.Model.Network.Term,
        Luna.Syntax.Model.Text.Fixity,
        Luna.Syntax.Model.Text.Location,
        Luna.Syntax.Repr.Styles,
        Prelude.Luna,
        System.Platform

    other-modules: Paths_luna_core

    build-depends: base
                 , clock
                 , constraints
                 , container
                 , convert
                 , data-base
                 , data-construction
                 , data-default
                 , data-layer
                 , data-member
                 , data-pool
                 , data-result
                 , deepseq
                 , dependent-state
                 , digits
                 , either
                 , error-util
                 , errors
                 , exceptions
                 , extra
                 , ghc
                 , ghc-mtl
                 , ghc-prim
                 , ghc-paths
                 , ghc-session >= 0.1.2.0
                 , graphviz >= 2999.17.0.2.2
                 , lens
                 , lens-utils
                 , MissingH
                 , mtl
                 , OneTuple
                 , placeholders
                 , process
                 , prologue
                 , split
                 , text
                 , transformers
                 , tuple
                 , type-cache
                 , typelevel
                 , vector



benchmark graph-builder
    default-language: Haskell2010
    type:             exitcode-stdio-1.0
    hs-source-dirs:   testsuite/benchmarks
    main-is:          Main.hs
    extensions:       ConstraintKinds
                      DataKinds
                      DefaultSignatures
                      DeriveDataTypeable
                      DeriveFoldable
                      DeriveFunctor
                      DeriveGeneric
                      DeriveTraversable
                      DoAndIfThenElse
                      EmptyDataDecls
                      FlexibleContexts
                      FlexibleInstances
                      FunctionalDependencies
                      GeneralizedNewtypeDeriving
                      InstanceSigs
                      LambdaCase
                      MultiParamTypeClasses
                      NoImplicitPrelude
                      OverloadedStrings
                      PackageImports
                      ScopedTypeVariables
                      StandaloneDeriving
                      TemplateHaskell
                      TupleSections
                      TypeFamilies
                      TypeOperators
                      ViewPatterns

    if !flag(graph-benchmarks)
        buildable: False
    else
        build-depends: base
                     , container
                     , criterion
                     , luna-core
                     , typelevel
                     , transformers
                     , vector
                     , ghc-prim
