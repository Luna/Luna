import project.Data.Numeric.Math_Context.Math_Context
import project.Data.Numeric.Rounding_Mode.Rounding_Mode
import project.Data.Text.Text
import project.Nothing.Nothing
from project.Data.Numbers import Integer, Float

polyglot java import java.math.BigDecimal

type Decimal
    Value (big_decimal:BigDecimal)

    + : Decimal -> Decimal -> Decimal
    + self (that:Decimal) = self.add that

    add : Decimal -> Decimal -> Math_Context | Nothing -> Decimal
    add self (that:Decimal) (math_context : Math_Context | Nothing)=Nothing =
        case math_context of
            Nothing -> Decimal.Value (self.big_decimal.add that.big_decimal)
            _ -> Decimal.Value (self.big_decimal.add that.big_decimal math_context.math_context)

    get_precision : Integer
    get_precision self = self.big_decimal.precision

    get_scale : Integer
    get_scale self = self.big_decimal.scale

    get_unscaled_value : Integer
    get_unscaled_value  self = self.big_decimal.unscaledValue

Decimal.from (that:Text) = Decimal.Value (BigDecimal.new that)
Decimal.from (that:Integer) = Decimal.Value (BigDecimal.new that)
Decimal.from (that:Float) = Decimal.Value (BigDecimal.new that)
