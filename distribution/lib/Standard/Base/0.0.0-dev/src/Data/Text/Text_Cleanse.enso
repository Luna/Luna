from Standard.Base import all

type Named_Pattern
   Duplicate_Whitespace
   Leading_Whitespace
   Trailing_Whitespace
   All_Whitespace
   Leading_Numbers
   Trailing_Numbers
   Non_ASCII
   Tabs
   Letters
   Numbers
   Punctuation
   Symbols

## Defines a Text_Cleanse operation
type Text_Cleanse
   Value named_pattern:Named_Pattern
   
   ## Apply the cleanse operation to the text.
   apply self input:Cleansable_Text -> Any =
      case self.named_pattern of
         Named_Pattern.Leading_Whitespace -> input.replace "^\s+" ""
         Named_Pattern.Trailing_Whitespace -> input.replace "\s+$" ""
         Named_Pattern.Duplicate_Whitespace -> input.replace "(\s)+" "$1"
         Named_Pattern.All_Whitespace -> input.replace "\s+" ""
         Named_Pattern.Leading_Numbers -> input.replace "^\d+" ""
         Named_Pattern.Trailing_Numbers -> input.replace "\d+$" ""
         Named_Pattern.Non_ASCII -> input.replace "[^\x00-\x7F]" ""
         Named_Pattern.Tabs -> input.replace "\t" ""
         Named_Pattern.Letters -> input.replace "[a-zA-Z]" ""
         Named_Pattern.Numbers -> input.replace "\d" ""
         Named_Pattern.Punctuation -> input.replace '[,.!?():;\'\"]' ""
         Named_Pattern.Symbols -> input.replace "[^a-zA-Z\d\s]" ""

## PRIVATE 
   Defines the interface for cleansable object.
type Cleansable_Text
   Value replace



