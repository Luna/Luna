from Standard.Base import all

type Text_Ordering
    ## Specifies the ordering of text values.

       For the In-memory backend, the default ordering is case-sensitive. In
       databases, the default ordering depends on the database configuration.

       Arguments:
       - sort_digits_as_numbers: Sort digits in the text as numbers. Setting
         this to `True` results in a "Natural" ordering.
    Default (sort_digits_as_numbers:Boolean=False)

    ## Case sensitive ordering of values.

       It will ensure case-sensitive ordering regardless of backend defaults.
       This may make database queries more complicated and may result in being
       unable to rely on existing indices, thus potentially making the queries
       much slower. The `Default` ordering is preferred wherever possible.

       Arguments:
       - sort_digits_as_numbers: Sort digits in the text as numbers. Setting
         this to `True` results in a "Natural" ordering.
    Case_Sensitive (sort_digits_as_numbers:Boolean=False)

    ## Case sensitive ordering of values.

       It will ensure case-insensitive ordering regardless of backend defaults.
       This may make database queries more complicated and may result in being
       unable to rely on existing indices, thus potentially making the queries
       much slower. The `Default` ordering is preferred wherever possible.

       Arguments:
       - sort_digits_as_numbers: Sort digits in the text as numbers. Setting
         this to `True` results in a "Natural" ordering.
    Case_Insensitive (locale:Locale=Locale.default) (sort_digits_as_numbers:Boolean=False)
