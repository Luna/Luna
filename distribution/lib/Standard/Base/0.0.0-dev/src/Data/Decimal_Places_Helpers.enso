import project.Any.Any
import project.Data.Numbers.Integer
import project.Error.Error
import project.Errors.Illegal_Argument.Illegal_Argument

## PRIVATE
   The smallest allowed value for the `decimal_places` argument to `round`
round_min_decimal_places : Integer
round_min_decimal_places = -15

## PRIVATE
   The largest allowed value for the `decimal_places` argument to `round`
round_max_decimal_places : Integer
round_max_decimal_places = 15

## PRIVATE
   Restrict rounding decimal_places parameter.
check_decimal_places : Integer -> Any -> Any ! Illegal_Argument
check_decimal_places decimal_places ~action =
    if decimal_places >= round_min_decimal_places && decimal_places <= round_max_decimal_places then action else
        msg = "round: decimal_places must be between " + round_min_decimal_places.to_text + " and " + round_max_decimal_places.to_text + " (inclusive), but was " + decimal_places.to_text
        Error.throw (Illegal_Argument.Error msg)
