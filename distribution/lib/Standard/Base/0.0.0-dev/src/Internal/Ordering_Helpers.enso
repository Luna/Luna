private

import project.Any.Any
from project.Data.Boolean import Boolean, False, True
from project.Data.Ordering import all
import project.Errors.Common.Incomparable_Values
import project.Error.Error
import project.Meta

## PRIVATE
   Checks if the comparators for the given objects are both of the same type. If so,
   proceeds with the given action, and if not, throws `Incomparable_Values` error.
assert_same_comparators : Any -> Any -> (Any -> Any) -> Any ! Incomparable_Values
assert_same_comparators this that ~action =
    comp_this = Comparable.from this
    comp_that = Comparable.from that
    case Meta.is_same_object comp_this.comparator comp_that.comparator of
        True -> action comp_this.comparator
        False -> Error.throw (Incomparable_Values.Error this that)

## PRIVATE
type Positive_Integer_Comparator
    ## PRIVATE
    compare x y =
        Comparable.from x.integer . compare y.integer

    ## PRIVATE
    hash x = Comparable.from x.integer . hash

## PRIVATE
type Ordering_Comparator
    ## PRIVATE
    compare x y = (Comparable.from x.to_sign).compare x.to_sign y.to_sign

    ## PRIVATE
    hash x = x.to_sign
