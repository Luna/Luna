import Standard.Base.Error.Error
import Standard.Base.Nothing.Nothing
import Standard.Base.Runtime.Managed_Resource.Managed_Resource
import Standard.Base.Runtime.Ref.Ref
from Standard.Base.Data.Boolean import Boolean, True, False

## PRIVATE
type Reload_Detector_Fake
    Value

## PRIVATE
   This is used by ReloadDetector.java to create a `Managed_Resource` that is
   garbage collected when the reload button is pressed.

   The managed resource contains a Ref containing a 0 (the value is
   unimportant). When the reload button is pressed, the ref is removed and
   attempting to access it using `with` throws an `Uninitialized_State`. When
   the `Uninitialized_State` is detected, it indicates that the reload has been
   initiated.

   For standard library testing, a special fake value is stored in the ref to
   indicate a reload.
type Reload_Detector
    private Value mr:Managed_Resource

    new -> Reload_Detector =
        mr = Managed_Resource.register (Ref.new 0) (x-> Nothing) True
        Reload_Detector.Value mr

    has_reload_occurred self =
        self.mr.has_been_collected || self.mr.with (ref-> ref.get.is_a Reload_Detector_Fake)

    simulate_reload_test_only self =
        self.mr.with ref-> ref.put Reload_Detector_Fake.Value

create_reload_detector = Reload_Detector.new
