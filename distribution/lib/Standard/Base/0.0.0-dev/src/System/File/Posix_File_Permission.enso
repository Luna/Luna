from Standard.Base import all

polyglot java import java.nio.file.attribute.PosixFilePermission

## Enso model of the Java `PosixFilePermission` enum.
type Posix_File_Permission
    type Owner_Read
    type Owner_Execute
    type Owner_Write
    type Group_Read
    type Group_Write
    type Group_Execute
    type Others_Read
    type Others_Write
    type Others_Execute

    ## Converts the Enso atom to its Java enum counterpart.
    to_java : PosixFilePermission
    to_java = case self of
        Owner_Read -> PosixFilePermission.OWNER_READ
        Owner_Execute -> PosixFilePermission.OWNER_EXECUTE
        Owner_Write -> PosixFilePermission.OWNER_WRITE
        Group_Read -> PosixFilePermission.GROUP_READ
        Group_Write -> PosixFilePermission.GROUP_WRITE
        Group_Execute -> PosixFilePermission.GROUP_EXECUTE
        Others_Read -> PosixFilePermission.OTHERS_READ
        Others_Write -> PosixFilePermission.OTHERS_WRITE
        Others_Execute -> PosixFilePermission.OTHERS_EXECUTE

## PRIVATE
   Enumerates all possible values of `Posix_File_Permission`.
possible_values =
    [Owner_Read, Owner_Write, Owner_Execute, Group_Read, Group_Write, Group_Execute, Others_Read, Others_Write, Others_Execute]

## Converts the Java `PosixFilePermission` enum to its Enso atom counterpart.

   Returns `Nothing` if an invalid value has been provided.
from_java java_enum =
    found = possible_values.find x->
        x.to_java == java_enum
    found.catch Nothing
