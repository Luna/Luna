## Utilities for working with threads.
   Internal threading utilities used for working with threads.

import project.Any.Any
import project.Data.Numbers.Integer

## PRIVATE
   ADVANCED
   Executes an action with a handler for the executing thread being
   interrupted.

   Arguments:
   - action: The action to execute.
   - interrupt_handler: The code to be executed if the thread is
     interrupted.

   > Example
     Die on thread interrupts.

         Thread.with_interrupt_handler (1 + 1) <| IO.println "I died!"
with_interrupt_handler : Any -> Any -> Any
with_interrupt_handler ~action ~interrupt_handler = @Builtin_Method "Thread.with_interrupt_handler"

## PRIVATE
   ADVANCED
   Temporarily cease execution of the current thread.

   Arguments:
   - time: amount of milliseconds to sleep

   > Example
     Sleep the current thread for 1 second.

         Thread.sleep 1000 <| IO.println "I continue!"
sleep : Integer
sleep time_in_milliseconds = @Builtin_Method "Thread.sleep"

