from Standard.Base import all
import Standard.Base.Data.Base_64.Base_64
import Standard.Base.Network.HTTP.Request_Body.Request_Body
import Standard.Base.Runtime.Managed_Resource.Managed_Resource

import project.Connection.Snowflake_Details.Snowflake_Details

polyglot java import org.enso.snowflake.OAuthCallback

initiate_oauth -> Snowflake_Details =
    Error.throw "TODO"

perform_oauth account:Text role:Text =
    uri = create_oauth_uri account role refresh_token=False
    print_panic caught_panic =
        IO.println "Panic caught: "+caught_panic.payload.to_text
        IO.println caught_panic.convert_to_dataflow_error.get_stack_trace_text
    Panic.catch Any handler=print_panic <|
        result = Managed_Resource.bracket (OAuthCallback.createCallbackServer 51234) (.close) server->
            # We start the server first to ensure we can 'reserve' the port before opening the browser
            IO.println "Please open "+uri.to_text+" in your browser and follow the instructions."
            server.waitForCallback
        code_prefix = "code="
        code = result
            . split "&"
            . find (e-> e.starts_with code_prefix)
            . drop code_prefix.length
        access_token = exchange_code_for_access_token account code
        IO.println access_token



create_oauth_uri account:Text role:Text refresh_token:Boolean -> URI =
    # TODO add code_challenge for PKCE
    # TODO check that account does not contain any unexpected characters
    base_uri = URI.from "https://"+account+".snowflakecomputing.com/oauth/authorize"
    scope = (if refresh_token then "refresh_token " else "")+"session:role:"+role
    base_uri
        . add_query_argument "response_type" "code"
        . add_query_argument "client_id" client_id
        . add_query_argument "redirect_uri" redirect_uri
        . add_query_argument "scope" scope
        . add_query_argument "state" "foobar"

type Access_Token
    Value token:Text expiry:Date_Time

exchange_code_for_access_token account:Text code:Text -> Access_Token =
    now = Date_Time.now
    uri = URI.from "https://"+account+".snowflakecomputing.com/oauth/token-request"
    params = Dictionary.from_vector [["grant_type", "authorization_code"], ["code", code], ["redirect_uri", redirect_uri]]
    request_body = Request_Body.Form_Data params url_encoded=True
    headers = [Header.authorization_basic client_id client_secret]
    response = Data.post uri body=request_body headers=headers response_format=JSON_Format
    IO.println response
    Access_Token.Value (response.get "access_token") (now + Duration.new seconds=(response.get "expires_in"))


client_id = Environment.get "SNOWFLAKE_APP_CLIENT_ID"
client_secret = Environment.get "SNOWFLAKE_APP_CLIENT_SECRET"
redirect_uri = "http://localhost:51234/snowflake"
