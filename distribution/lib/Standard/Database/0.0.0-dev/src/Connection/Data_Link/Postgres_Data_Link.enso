from Standard.Base import all
from Standard.Base.Enso_Cloud.Data_Link import parse_secure_value
from Standard.Base.Enso_Cloud.Public_Utils import get_required_field

import project.Connection.Connection_Options.Connection_Options
import project.Connection.Credentials.Credentials
import project.Connection.Postgres_Details.Postgres_Details

## PRIVATE
type Postgres_Data_Link
    ## PRIVATE
       A data-link returning a connection to the specified database.
    Connection details:Postgres_Details

    ## PRIVATE
       A data-link returning a query to a specific table within a database.
    Table name:Text details:Postgres_Details


    ## PRIVATE
    parse json -> Postgres_Data_Link =
        host = get_required_field "host" json
        port = get_required_field "port" json
        db_name = get_required_field "database_name" json
        schema = json.get "schema" if_missing=""

        credentials_json = json.get "credentials"
        credentials = credentials_json.if_not_nothing <|
            username = get_required_field "username" credentials_json |> parse_secure_value
            password = get_required_field "password" credentials_json |> parse_secure_value
            Credentials.Username_And_Password username password

        details = Postgres_Details.Postgres host=host port=port database=db_name schema=schema credentials=credentials
        case json.get "table" of
            Nothing ->
                Postgres_Data_Link.Connection details
            table_name : Text ->
                Postgres_Data_Link.Table table_name details

    ## PRIVATE
    read self (on_problems : Problem_Behavior) =
        _ = on_problems
        default_options = Connection_Options.Value
        connection = self.details.connect default_options
        case self of
            Postgres_Data_Link.Connection _ -> connection
            Postgres_Data_Link.Table table_name _ ->
                connection.query table_name
