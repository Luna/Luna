private

from Standard.Base import all
import Standard.Base.Errors.Common.Dry_Run_Operation
import Standard.Base.Runtime.Context

import project.SQL_Query.SQL_Query
from project.Errors import SQL_Error, Table_Already_Exists
from project.Internal.Upload.Operations.Internal_Core import internal_create_table_structure

## PRIVATE
   Creates a new database table with the provided structure and returns the name
   of the created table.

   The user-facing function that handles the dry-run logic.
create_table_implementation connection table_name structure primary_key temporary allow_existing on_problems:Problem_Behavior = Panic.recover SQL_Error <|
    connection.base_connection.maybe_run_maintenance
    table_naming_helper = connection.base_connection.table_naming_helper
    table_naming_helper.verify_table_name table_name <| connection.jdbc_connection.run_within_transaction <|
        case connection.base_connection.table_exists table_name of
            True ->
                if allow_existing then connection.query (SQL_Query.Table_Name table_name) else Error.throw (Table_Already_Exists.Error table_name)
            False ->
                dry_run = Context.Output.is_enabled.not
                effective_table_name = if dry_run.not then table_name else table_naming_helper.generate_dry_run_table_name table_name
                effective_temporary = temporary || dry_run
                created_table_name = Context.Output.with_enabled <|
                    if dry_run then
                        ## This temporary table can be safely dropped if it
                           exists, because it only existed if it was created by
                           a previous dry run. `generate_dry_run_table_name`
                           will never return a name of a table that exists but
                           was created outside of a dry run.
                        connection.drop_table effective_table_name if_exists=True
                    internal_create_table_structure connection effective_table_name structure primary_key effective_temporary on_problems
                if dry_run.not then connection.query (SQL_Query.Table_Name created_table_name) else
                    created_table = connection.base_connection.internal_allocate_dry_run_table created_table_name
                    warning = Dry_Run_Operation.Warning "Only a dry run of `create_table` has occurred, creating a temporary table ("+created_table_name.pretty+").  Press the Write button â–¶ to create the actual one."
                    Warning.attach warning created_table
