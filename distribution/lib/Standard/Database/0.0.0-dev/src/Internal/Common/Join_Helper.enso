from Standard.Base import all
import Standard.Base.Error.Unimplemented.Unimplemented

import Standard.Table.Data.Join_Kind.Join_Kind

import project.Internal.IR.Context.Context
import project.Internal.IR.From_Spec.From_Spec
import project.Internal.IR.Join_Kind.Join_Kind as Internal_Join_Kind
import project.Data.Table.Table

## PRIVATE
default_prepare_join connection join_kind new_table_name left_subquery right_subquery on_expressions columns_to_select =
    # TODO anti-joins
    internal_kind = case join_kind of
        Join_Kind.Inner           -> Internal_Join_Kind.Inner
        Join_Kind.Left_Outer      -> Internal_Join_Kind.Left
        Join_Kind.Right_Outer     -> Internal_Join_Kind.Right
        Join_Kind.Full            -> Internal_Join_Kind.Full
        Join_Kind.Left_Exclusive  -> Unimplemented.throw "anti-joins not implemented yet"
        Join_Kind.Right_Exclusive -> Unimplemented.throw "anti-joins not implemented yet"

    new_from = From_Spec.Join internal_kind left_subquery right_subquery on_expressions
    new_ctx = Context.for_subquery new_from

    Table.Value new_table_name connection columns_to_select new_ctx
