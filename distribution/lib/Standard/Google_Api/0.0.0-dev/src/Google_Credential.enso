from Standard.Base import all
import Standard.Base.Errors.Common.Missing_Argument
from Standard.Base.Metadata import make_single_choice, Choice, Widget
from Standard.Base.Metadata.Choice import Option

polyglot java import com.google.api.gax.core.CredentialsProvider
polyglot java import com.google.api.gax.core.FixedCredentialsProvider
polyglot java import com.google.auth.oauth2.GoogleCredentials

type Google_Credential
    ## ICON key
       Creates a Google credential either from a json file or the default environment variables.

       Arguments:
       - file: Path to the json credentials file or `Nothing` for the default.
    @file (make_single_choice [Choice.Option "File" "File.new", Choice.Option "Default" "Nothing"])
    new : File | Nothing -> Google_Credential
    new file:(File | Nothing)=Nothing = case file of
        _ : File -> Google_Credential.From_File file
        Nothing -> Google_Credential.Default

    ## ICON key
       Access using a json credentials file downloaded from your Google account.

       Arguments:
       - file: Path to the json credentials file.
    From_File file:File=(Missing_Argument.throw "file")

    ## ICON key
       Access using the defaults provided by the environment variables.
    Default

    ## ICON key
       Feeding this into supporting components will give sample data for that component.
    Sample

    ## PRIVATE
       Gets the Java version of the credentials.
    private as_java self -> CredentialsProvider | Nothing = case self of
        Google_Credential.From_File file ->
            google_credentials = file.with_input_stream [File_Access.Read] stream->
                stream.with_java_stream is->
                    GoogleCredentials.fromStream is
            FixedCredentialsProvider.create google_credentials
        Google_Credential.Default -> Nothing

    ## PRIVATE
    default_widget : Widget
    default_widget =
        make_single_choice [Option "File" "..From_File", Option "Default" "..Default"]

## PRIVATE
Google_Credential.from (that:File) = Google_Credential.From_File that

## PRIVATE
Google_Credential.from (that:Text) = Google_Credential.From_File (File.new that)
