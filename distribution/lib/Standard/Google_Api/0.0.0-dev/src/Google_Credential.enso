from Standard.Base import all
import Standard.Base.Errors.Common.Missing_Argument
import Standard.Base.Runtime.Context
from Standard.Base.Metadata import Choice, Display, make_single_choice, Widget
from Standard.Base.Metadata.Choice import Option

polyglot java import com.google.api.gax.core.CredentialsProvider
polyglot java import com.google.api.gax.core.FixedCredentialsProvider
polyglot java import com.google.auth.oauth2.GoogleCredentials

type Google_Credential
    ## ICON key
       Creates a Google credential either from a json file or the default environment variables.

       Arguments:
       - file: Path to the json credentials file or `Nothing` for the default.
    @file (make_single_choice [Choice.Option "File" "File.new", Choice.Option "Default" "Nothing"])
    new : Enso_File | File | Nothing -> Google_Credential
    new file:(Enso_File | File | Nothing)=Nothing = case file of
        _ : Enso_File -> Google_Credential.from file
        _ : File -> Google_Credential.From_File file
        Nothing -> Google_Credential.Default

    ## PRIVATE
       ICON key
       Creates a Google credential either from the default environment variables.
    default -> Google_Credential = Google_Credential.Default

    ## ICON key
       Access using a json credentials file downloaded from your Google account.

       Arguments:
       - file: Path to the json credentials file.
    private From_File file:File=(Missing_Argument.throw "file")

    ## ICON key
       Access using the defaults provided by the environment variables.
    private Default

    ## ICON key
       Feeding this into supporting components will give sample data for that component.
    private Sample

    ## PRIVATE
       Gets the Java version of the credentials.
    private as_java self -> CredentialsProvider | Nothing = case self of
        Google_Credential.From_File file ->
            google_credentials = file.with_input_stream [File_Access.Read] stream->
                stream.with_java_stream is->
                    GoogleCredentials.fromStream is
            FixedCredentialsProvider.create google_credentials
        Google_Credential.Default -> Nothing

    ## PRIVATE
    default_widget display:Display=..When_Modified -> Widget =
        make_single_choice [Option "File" "File.new", Option "Default" "Google_Credential.default"] display=display

## PRIVATE
   To enable cloud file to work as a credential, need to localise it.
Google_Credential.from (that:Enso_File) =
    tmp_file = File.create_temporary_file "gccloud" ".json"
    json = that.read_text
    Context.Output.with_enabled <| json.write tmp_file
    Google_Credential.from tmp_file

## PRIVATE
Google_Credential.from (that:File) = Google_Credential.From_File that

## PRIVATE
Google_Credential.from (that:Text) = Google_Credential.from (File.new that)
