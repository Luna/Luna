from Standard.Base import all
import Standard.Base.Data.Array_Proxy.Array_Proxy
import Standard.Base.Errors.Common.Missing_Argument
from Standard.Base.Metadata import make_single_choice, Widget
from Standard.Base.Metadata.Choice import Option
from Standard.Base.Metadata.Widget import Single_Choice, Text_Input, Vector_Editor

from Standard.Table import Table
import Standard.Table.Rows_To_Read.Rows_To_Read

import project.Google_Credential.Google_Credential
import project.Google_Analytics_Account.Google_Analytics_Account
import project.Google_Analytics_Account.Google_Analytics_Account_Filter
import project.Google_Analytics_Field.Google_Analytics_Field
import project.Google_Analytics_Property.Google_Analytics_Property
from project.Internal.Google_Analytics_Internal import all

polyglot java import org.enso.google.GoogleAnalyticsReader

type Google_Analytics
    ## GROUP Standard.Base.Input
       ICON data_input
       Performs google analytics call
       This method calls the google reporting v4 api.

       Arguments:
       - property_id: The Google Analytics property_id that is being queried
       - start_date: The beginning date of the query. Default is 2020-03-31
       - end_date: The end date being queried. Defaults to today.
    @property Google_Analytics_Property.default_widget
    @dimensions _make_dimensions_vector_selector
    @metrics _make_metrics_vector_selector
    @start_date _make_start_date_widget
    @end_date (Date.default_widget include_today=True)
    @credentials Google_Credential.default_widget
    read : Google_Analytics_Property -> (Vector Text) -> (Vector Text) -> Date -> Date -> Google_Credential -> Table
    read property:Google_Analytics_Property=(Missing_Argument.throw "property") dimensions:Vector=['country'] metrics:Vector=['activeUsers'] start_date:Date=(Date.today.previous ..Year) end_date:Date=Date.today credentials:Google_Credential=..Default -> Table =
        case credentials of
            Google_Credential.Sample -> read_sample_data dimensions metrics start_date end_date
            _ -> read_api_data property.id dimensions metrics start_date end_date credentials

    ## ICON data_input
       Reads the set of accounts from Google Analytics Admin API.

       Arguments:
       - credentials: The Google credentials to use. Default is the default
         credentials.
       - limit: The maximum number of accounts to read. Default is 1000.
       - include_deleted: Whether to include deleted accounts. Default is false.
    @credentials Google_Credential.default_widget
    @limit Rows_To_Read.default_widget
    list_accounts : Google_Credential -> Rows_To_Read -> Boolean -> Vector
    list_accounts credentials:Google_Credential=..Default (limit : Rows_To_Read = ..First_With_Warning 1000) include_deleted:Boolean=False -> Vector =
        java_credentials = credentials.as_java
        to_read = limit.rows_to_read.if_nothing 0
        array = GoogleAnalyticsReader.listAccounts java_credentials to_read include_deleted
        vector = array.map a-> Google_Analytics_Account.Value a
        limit.attach_warning_vector vector

    ## ICON data_input
       Reads the set of properties from Google Analytics Admin API.

       Arguments:
       - credentials: The Google credentials to use. Default is the default
         credentials.
       - limit: The maximum number of accounts to read. Default is 1000.
       - include_deleted: Whether to include deleted accounts. Default is false.
    @credentials Google_Credential.default_widget
    @limit Rows_To_Read.default_widget
    list_properties : Google_Analytics_Account_Filter -> Google_Credential -> Rows_To_Read -> Boolean -> Vector
    list_properties account:Google_Analytics_Account_Filter=..All_Accounts credentials:Google_Credential=..Default (limit : Rows_To_Read = ..First_With_Warning 1000) include_deleted:Boolean=False -> Vector =
        java_credentials = credentials.as_java
        to_read = limit.rows_to_read.if_nothing 0
        filter = account.as_java
        array = GoogleAnalyticsReader.listProperties java_credentials filter to_read include_deleted
        vector = array.map a-> Google_Analytics_Property.Value a
        limit.attach_warning_vector vector

    ## ICON data_input
       Reads the set of metrics from Google Analytics for a property.

       Arguments:
       - property: The Google Analytics property to read metrics from.
       - credentials: The Google credentials to use. Default is the default
         credentials.
    @property Google_Analytics_Property.default_widget
    @credentials Google_Credential.default_widget
    list_metrics : Google_Analytics_Property -> Google_Credential -> Vector
    list_metrics property:Google_Analytics_Property=(Missing_Argument.throw "property") credentials:Google_Credential=..Default -> Vector =
        java_credentials = credentials.as_java
        array = GoogleAnalyticsReader.listMetrics java_credentials property.java_record
        array.map record-> Google_Analytics_Field.Metric record

    ## ICON data_input
       Reads the set of dimensions from Google Analytics for a property.

       Arguments:
       - property: The Google Analytics property to read metrics from.
       - credentials: The Google credentials to use. Default is the default
         credentials.
    @property Google_Analytics_Property.default_widget
    @credentials Google_Credential.default_widget
    list_dimensions : Google_Analytics_Property -> Google_Credential -> Vector
    list_dimensions property:Google_Analytics_Property=(Missing_Argument.throw "property") credentials:Google_Credential=..Default -> Vector =
        java_credentials = credentials.as_java
        array = GoogleAnalyticsReader.listDimensions java_credentials property.java_record
        array.map record-> Google_Analytics_Field.Dimension record

## PRIVATE
_make_metrics_vector_selector : Any -> Any -> Widget
_make_metrics_vector_selector self_arg cache =
    _ = self_arg
    items = Panic.catch Any handler=p->[p.payload.to_display_text] <|
        property = cache.if_not_nothing <| cache "property"
        property.if_not_nothing <|
            credentials = cache.if_not_nothing <| cache "credentials"
            Google_Analytics.list_metrics property credentials . map f-> Option (f.apiName + " (" + f.category + ")") f.apiName.pretty
    item_editor = make_single_choice (items.if_nothing ['activeUsers', 'bounceRate', 'conversions', 'newUsers', 'sessionsPerUser', 'userConversionRate'])
    Vector_Editor item_editor=item_editor item_default=item_editor.values.first.value display=..Always

## PRIVATE
_make_dimensions_vector_selector : Any -> Any -> Widget
_make_dimensions_vector_selector self_arg cache =
    _ = self_arg
    items = Panic.catch Any handler=p->[p.payload.to_display_text] <|
        property = cache.if_not_nothing <| cache "property"
        property.if_not_nothing <|
            credentials = cache.if_not_nothing <| cache "credentials"
            Google_Analytics.list_dimensions property credentials . map f-> Option (f.apiName + " (" + f.category + ")") f.apiName.pretty
    item_editor = make_single_choice (items.if_nothing ['country', 'year', 'month', 'date', 'userAgeBracket', 'userGender'])
    Vector_Editor item_editor=item_editor item_default=item_editor.values.first.value display=..Always

## PRIVATE
_make_start_date_widget : Widget
private _make_start_date_widget =
    options = [Option "<Fixed Date>" "Date.new", Option "<Start of Period>" "Date.today.previous"]
    Widget.Single_Choice values=options display=..When_Modified
