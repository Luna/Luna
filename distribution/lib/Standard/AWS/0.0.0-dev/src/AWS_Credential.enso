from Standard.Base import all
from Standard.Base.Enso_Cloud.Enso_Secret import as_hideable_value
from Standard.Base.Metadata import make_single_choice, Widget

import project.AWS_Region.AWS_Region

polyglot java import org.enso.aws.AwsCredential
polyglot java import org.enso.aws.ProfileReader

type AWS_Credential
    ## Access AWS using the default credential method.
    Default

    ## Access using IAM via an AWS profile.

       Arguments:
       - profile: AWS profile name (if empty uses default).
    @profile (make_single_choice AWS_Credential.profile_names)
    Profile profile:Text='default'

    ## Access using IAM via an AWS access key ID and secret access key.

       Arguments:
       - access_key_id: AWS access key ID.
       - secret_access_key: AWS secret access key.
    Key access_key_id:Text|Enso_Secret secret_access_key:Text|Enso_Secret

    ## PRIVATE
       Allows to override additional properties of the AWS credential.

       Arguments:
       - base_credential: The base credential to use. It should be one of:
         Default, Profile, Key.
       - default_region: The default region to use for operations that may
         require a region but it is not explicitly specified (e.g. S3 operations).
    With_Advanced_Properties (base_credential : AWS_Credential) (default_region : AWS_Region)

    ## Get a list of the available profiles
    profile_names : Vector Text
    profile_names = Vector.from_polyglot_array <|
        ProfileReader.INSTANCE.getProfiles

    ## PRIVATE
       Generates a Java representation of the credential.

       Note that this ignores the additional properties that may be set by
       `With_Advanced_Properties` constructor. These are expected to be handled
       separately.
    as_java : AWS_Credential -> AwsCredential
    as_java self = case self of
        AWS_Credential.Default -> AwsCredential.Default.new
        AWS_Credential.Profile profile -> AwsCredential.Profile.new profile
        AWS_Credential.Key access_key_id secret_access_key ->
            AwsCredential.Key.new (as_hideable_value access_key_id) (as_hideable_value secret_access_key)
        AWS_Credential.With_Advanced_Properties base_credential _ ->
            base_credential.as_java

    ## Sets the default region for operations that need it but do not specify it
       explicitly (e.g. S3 operations).
    with_default_region self (region : AWS_Region) -> AWS_Credential = case self of
        AWS_Credential.With_Advanced_Properties base_credential _ ->
            AWS_Credential.With_Advanced_Properties base_credential region
        _ -> AWS_Credential.With_Advanced_Properties self region

    ## PRIVATE
    get_default_region self -> AWS_Region = case self of
        AWS_Credential.With_Advanced_Properties _ default_region -> default_region
        AWS_Credential.Profile profile_name ->
            AWS_Region.Default_With_Profile profile_name
        _ -> AWS_Region.Default
