from Standard.Base import all

import project.File_Upload
import project.Id.Id
import project.Preprocessor
import project.Helpers

from project.File_Upload export file_uploading
export project.Id.Id
export project.Helpers

from Standard.Visualization.Text import get_lazy_visualisation_text_window


## PRIVATE
   Returns the data requested to render a lazy view of the default visualisation. Decides
   whether to return a simplified version of the lazy data format.
make_lazy_visualisation_data : Text -> Vector Integer -> Vector Integer -> Text
make_lazy_visualisation_data text text_window_position text_window_size chunk_size =
    min_length_for_laziness = chunk_size * (text_window_size.first) * (text_window_size.second)
    if text.length < min_length_for_laziness then text else
        get_lazy_visualisation_text_window text text_window_position text_window_size chunk_size

## UNSTABLE
   ADVANCED
   Returns the data requested to render a lazy view of the default visualisation.
Any.to_lazy_visualization_data : Vector Integer -> Vector Integer -> Text
Any.to_lazy_visualization_data self text_window_position text_window_size chunk_size =
    text = self.to_default_visualization_data
    make_lazy_visualisation_data text text_window_position text_window_size chunk_size

## UNSTABLE
   ADVANCED
   Returns the data requested to render a lazy view of the default visualisation.
Text.to_lazy_visualization_data : Vector Integer -> Vector Integer -> Text
Text.to_lazy_visualization_data self text_window_position text_window_size chunk_size =
    min_length_for_laziness = chunk_size * (text_window_size.first) * (text_window_size.second)
    if self.length < min_length_for_laziness then self.to_default_visualization_data else
        get_lazy_visualisation_text_window self text_window_position text_window_size chunk_size
