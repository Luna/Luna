from Standard.Base import all

polyglot java import java.util.Random
polyglot java import org.enso.base.Text_Utils

upper_case_letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".utf_16
lower_case_letters = "abcdefghijklmnopqrstuvwxyz".utf_16
numbers = "0123456789".utf_16

## Object to generate (deterministic) random value for testing
type Faker
    type Faker generator

    ## Creates a new Faker which can be used for creating test values.

       Arguments:
       - seed: Optional seed value to make the sequence deterministic
    new : Integer -> Faker
    new (seed = 0) =
        generator = if seed == 0 then Random.new else Random.new seed
        Faker generator

    ## Creates a random string based on a template.

       Arguments:
       - template: Vector of vectors that represent the possible characters for each
         letter, as UTF-16 code units.

       > Examples:
         Creates a fake UK National Insurance number:

                l = "ABCEGHJKLMNOPRSTWXYZ".utf_16
                n = "0123456789".utf_16
                s = "ABCDFMP ".utf_16
                template = [l, l, n, n, n, n, n, s]
                ni_number = make_string template make_generator
    string_value : Vector -> Text
    string_value template =
        characters = template.map possible_chars->
            selected_char_ix = this.generator.nextInt possible_chars.length
            possible_chars.at selected_char_ix
        Text.from_utf_16 characters

    alpha : Integer->Boolean->Text
    alpha length=1 upper_case=F

    ## Create a random Boolean value
    boolean : Boolean
    make_boolean generator =
        if generator.nextDouble < 0.5 then True else False

## Create a random Integer value
make_integer : Integer->Integer->Any -> Boolean
make_integer minimum maximum generator =
    minimum + (generator.nextInt (maximum - minimum))

## Create a random Decimal value
make_decimal : Decimal->Decimal->Any -> Boolean
make_decimal minimum maximum generator =
    minimum + generator.nextDouble * (maximum - minimum)

## Random converts some values to Nothing
make_some_nothing : Any -> Any -> Decimal -> Any | Nothing
make_some_nothing value generator (chance=0.1)
    if generator.nextDouble <= chance then Nothing else value

## Picks an item at Random from a list

   Arguments:
   - items: Vector of items to pick from
   - generator: Random number generator
pick_item : Vector -> Any -> Any
pick_item items generator =
    items.at (generator.nextInt items.length)