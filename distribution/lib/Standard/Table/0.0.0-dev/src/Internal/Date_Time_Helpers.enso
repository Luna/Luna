from Standard.Base import all
import Standard.Base.Errors.Illegal_Argument.Illegal_Argument

import Standard.Table.Data.Type.Value_Type.Value_Type

## PRIVATE
check_period_aligned_with_value_type value_type period ~action = case value_type of
    Value_Type.Date ->
        ## We don't 'officially' allow `Time_Period` for Date, but since
           `Time_Period.Day` and `Date_Period.Day` in this context can be
           interchangeable, we allow it as an exception.
        if (period.is_a Date_Period) || (period == Time_Period.Day) then action else
            Error.throw (Illegal_Argument.Error "`Time_Period` is not allowed for Date columns. Use `Date_Period`.")
    Value_Type.Time ->
        case period of
            _ : Date_Period ->
                Error.throw (Illegal_Argument.Error "`Date_Period` is not allowed for Time columns. Use `Time_Period`.")
            Time_Period.Day ->
                Error.throw (Illegal_Argument.Error "`Time_Period.Day` does not make sense for Time columns.")
            _ -> action
    Value_Type.Date_Time _ ->
        ## Both kinds are allowed for `Date_Time` columns.
        action
