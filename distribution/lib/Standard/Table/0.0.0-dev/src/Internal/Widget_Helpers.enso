from Standard.Base import all

from Standard.Base.Metadata.Widget import Single_Choice
from Standard.Base.Metadata.Choice import Option
import Standard.Base.Metadata.Display

from project.Data.Table import Table

## PRIVATE
   Make a column name selector.
make_column_name_selector : Table -> Display -> Single_Choice
make_column_name_selector table display=Display.Always =
    col_names = table.column_names
    names = col_names.map n-> Option n n.pretty
    Single_Choice display=display values=names

## PRIVATE
   Make a column name selector.
make_order_by_selector : Table -> Display -> Single_Choice
make_order_by_selector table display=Display.Always =
    col_names = table.column_names
    names = col_names.fold [] c-> n-> c + [Option n+" (Asc)" n.pretty, Option n+" (Desc)" "(Sort_Column.Name "+n.pretty+" Sort_Direction.Descending)"]
    Single_Choice display=display values=names

## PRIVATE
   Selector for type argument on `Column.parse`.
parse_type_selector : Single_Choice
parse_type_selector =
    choice = ['Auto', 'Value_Type.Integer', 'Value_Type.Float', 'Value_Type.Date', 'Value_Type.Date_Time', 'Value_Type.Time', 'Value_Type.Boolean']
    names = ['Auto', 'Integer', 'Float', 'Date', 'Date_Time', 'Time', 'Boolean']
    options = names.zip choice . map pair-> Option pair.first pair.second
    Single_Choice display=Display.Always values=options

