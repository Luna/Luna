from Standard.Base import all
import Standard.Base.Errors.Common.Type_Error
import Standard.Base.Errors.Illegal_Argument.Illegal_Argument
import Standard.Base.Errors.Unimplemented.Unimplemented

import project.Data.Table.Table
import project.Data.Conversions.Convertible_To_Columns.Convertible_To_Columns
import project.Data.Conversions.Convertible_To_Rows.Convertible_To_Rows

## PRIVATE
expand_column table column fields prefix =
    column_object = table.at column
    expanded = create_table_from_objects column_object.to_vector fields

    output_builder = Vector.new_builder table.column_count+expanded.column_count-1

    ## Resolve names
    resolved_prefix = if prefix.is_nothing then column_object.name+" " else prefix
    naming_strategy = table.column_naming_helper.create_unique_name_strategy
    naming_strategy.mark_used (table.column_names.filter (c->c!=column_object.name))
    new_names = naming_strategy.make_all_unique (expanded.column_names.map n-> resolved_prefix+n)
    new_columns = new_names.zip expanded.columns (n->c-> c.rename n)

    ## Create Merged Columns
    table.columns.each c->
        if c.name != column_object.name then output_builder.append c else
            output_builder.append_vector_range new_columns

    Table.new output_builder.to_vector

## PRIVATE
create_table_from_objects value:Convertible_To_Rows fields =
    len = value.length

    ## For every record, get the values into a Map.
    column_map = 0.up_to len . fold Map.empty current-> idx->
        v = ((value.getter idx):Convertible_To_Columns)
        field_names = fields.if_nothing (v.field_names)
        field_names.fold current c->f->
            data = c.get f (Vector.new_builder len)
            data.length.up_to idx . each _-> data.append Nothing
            data.append (v.getter f)
            c.insert f data

    used_fields = fields.if_nothing column_map.keys

    ## Convert Builders to Vectors and fill as needed.
    used_values = used_fields.map f->
        data = column_map.get f (Vector.new_builder len)
        data.length.up_to len . each _-> data.append Nothing
        data.to_vector

    Table.new (used_fields.zip used_values)
