from Standard.Base import all
from Standard.Table.Data.Table import Table
from Standard.Table.Data.Column import Column

type Filter_Condition
    ## Is equal to a value (or another column)?
    Equal value:(Column|Any)

    ## Is not equal to a value (or another column)?
    Not_Equal value:(Column|Any)

    ## Is less than a value (or another column)?
    Less value:(Column|Any)

    ## Is less than or equal to a value (or another column)?
    Less_Or_Equal value:(Column|Any)

    ## Is greater than a value (or another column)?
    Greater value:(Column|Any)

    ## Is greater than or equal to a value (or another column)?
    Greater_Or_Equal value:(Column|Any)

    ## Is between (inclusive) two values (or columns)?'
    Between lower:(Column|Any) upper:(Column|Any)

    ## Does the value match the SQL pattern (Text only)?
    Like sql_like_pattern:Text

    ## Does the value not match the SQL pattern (Text only)?
    Not_Like sql_like_pattern:Text

    ## Does the value start with a prefix (Text only)?
    Starts_With prefix:Text

    ## Does the value end with a suffix (Text only)?
    Ends_With suffix:Text

    ## Does the value contain the needle (Text only)?
    Contains substring:Text

    ## Is equal to "" or Nothing (Text only)?
    Is_Empty

    ## Is not equal to "" and Nothing (Text only)?
    Not_Empty

    ## Is equal to Nothing?
    Is_Nothing

    ## Is not equal to Nothing?
    Not_Nothing

    ## Is the value contained in `values`?
    Is_In values:Vector

    ## Is the value not contained in `values`?
    Not_In values:Vector

    ## Is the value equal to True (Boolean only)?
    Is_True

    ## Is the value equal to False (Boolean only)?
    Is_False


## PRIVATE
   Convert a SQL like
is_like Text -> (Text -> Boolean)
is_like sql_like =
    sql_regex = "^" + (sql_like.replace "\" "\\" . replace "." "\" . replace "_" "." . replace "%" ".*?") + "$"
    output text = text.matches sql_regex
    output
