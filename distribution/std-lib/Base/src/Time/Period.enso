from Base import all
import Base.Time.Period.Extensions

polyglot java import java.time.Period as Java_Period
polyglot java import java.time.LocalDate
polyglot java import java.time.temporal.TemporalAmount

from Base.Time.Period.Extensions export all hiding Java_Period

## This class models a quantity or amount of time in terms of years, months and
   days. See `Duration` for the time-based equivalent to this class.

   Durations and periods differ in their treatment of daylight savings time when
   added to `Zoned_Date_Time`. A `Duration` will add an exact number of seconds,
   thus a duration of one day is always exactly 24 hours. By contrast, a
   `Period` will add a conceptual day, trying to maintain the local time.

   For example, consider adding a period of one day and a duration of one day to
   18:00 on the evening before a daylight savings gap. The Period will add the
   conceptual day and result in a `Zoned_Date_Time` at 18:00 the following day. By
   contrast, the `Duration` will add exactly 24 hours, resulting in a
   `Zoned_Date_Time` at 19:00 the following day (assuming a one hour DST gap).
type Period internal_period

Period.internal_temporal_amount : TemporalAmount
Period.internal_temporal_amount = this . internal_period

Period.get_years : Integer
Period.get_years = this . internal_period . getYears []

## Obtains a `Period` from a text string such as PnYnMnD.

   This will parse the string produced by `to_text` which is based on the
   ISO-8601 period formats PnYnMnD and PnW.

   > Example
     Period of 2 years.
         Period.parse "P2Y"

   > Example
     Period of 3 months.
         Period.parse "P3M"

   > Example
     Period of 4 weeks.
         Period.parse "P4W"

   > Example
     Period of 1 year, 2 months and 3 days.
         Period.parse "P1Y2M3D"

   > Example
     Period of 1 year, 2 months, 3 weekks and 4 days.
         Period.parse "P1Y2M3W4D"

   > Example
     Period of -1 year and 2 months.
         Period.parse "P-1Y2M"

   > Example
     Period of -1 year and -2 months.
         Period.parse "-P1Y2M"
parse : Text -> Period
parse text = Period (Java_Period.parse [text])

## Obtains a `Period` consisting of the number of years, months, and days
   between two dates.

   > Example
     Period in 1 year between two local dates.
         Period.between (Local_Date.new 2009) (Local_Date.new 2010)
between : Local_Date -> Local_Date -> Period
between start_inclusive end_exclusive =
    Period (Java_Period.between [start_inclusive.internal_local_date, end_exclusive.internal_local_date])
