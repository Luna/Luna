from Standard.Base import all

import Standard.Table.Data.Table as Dataframe_Table
import Standard.Table.Data.Column as Dataframe_Column
import Standard.Database.Data.Table as Database_Table
import Standard.Database.Data.Column as Database_Column

# TODO add an initial offset to fully support lazy visualizations
## PRIVATE
prepare_visualization x max_rows = case x of
    Dataframe_Table.Table _ -> here.make_json x
    Dataframe_Column.Column _ -> here.make_json x.to_table
    Database_Table.Table _ _ _ _ ->
        here.make_json <| x.to_dataframe max_rows
    Database_Column.Column _ _ _ _ _ ->
        here.make_json <| x.to_table.to_dataframe max_rows
    _ -> x . to_json . to_text

## PRIVATE
make_json dataframe all_rows_count =
    header = ["header", dataframe.columns.map .name]
    data   = ["data",   dataframe.columns.map .to_vector . map (x -> x.take_start 2000) ]
    pairs  = [header,data]
    Json.from_pairs pairs . to_text
