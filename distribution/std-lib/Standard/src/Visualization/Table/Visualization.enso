from Standard.Base import all

import Standard.Table.Data.Table as Dataframe_Table
import Standard.Table.Data.Column as Dataframe_Column
import Standard.Database.Data.Table as Database_Table
import Standard.Database.Data.Column as Database_Column

# TODO add an initial offset to fully support lazy visualizations
## PRIVATE
prepare_visualization x max_rows = case x of
    Dataframe_Table.Table _ ->
        dataframe = x.take_start max_rows
        all_rows_count = x.row_count
        here.make_json dataframe all_rows_count
    Dataframe_Column.Column _ ->
        here.prepare_visualization x.to_table max_rows
    Database_Table.Table _ _ _ _ ->
        dataframe = x.to_dataframe max_rows
        all_rows_count = x.row_count
        here.make_json dataframe all_rows_count
    Database_Column.Column _ _ _ _ _ ->
        here.prepare_visualization x.to_table max_rows
    _ -> x . to_json . to_text

## PRIVATE
make_json dataframe all_rows_count =
    columns  = dataframe.columns
    header   = ["header", columns.map .name]
    data     = ["data",   columns.map .to_vector]
    all_rows = ["all_rows_count", all_rows_count]
    pairs    = [header, data, all_rows]
    Json.from_pairs pairs . to_text
