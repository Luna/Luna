from Standard.Base import all

import Standard.Visualization.Helpers

## PRIVATE
prepare_visualization x = Helpers.recover_errors <|
    prepared = x.to_sql.prepare
    code = prepared.first
    interpolations = prepared.second
    mapped = interpolations.map e->
        value = e.first
        actual_type = Meta.get_qualified_type_name value
        expected_sql_type = e.second.name
        expected_enso_type = here.find_expected_enso_type_for_sql e.second
        Json.from_pairs [["value", value], ["actual_type", actual_type], ["expected_sql_type", expected_sql_type], ["expected_enso_type", expected_enso_type]]
    Json.from_pairs [["code", code], ["interpolations", mapped]] . to_text

## PRIVATE
find_expected_enso_type_for_sql sql_type =
    if sql_type.is_definitely_integer then "Builtins.Main.Integer" else
        if sql_type.is_definitely_double then "Builtins.Main.Decimal" else
            if sql_type.is_definitely_text then "Builtins.Main.Text" else
                if sql_type.is_definitely_boolean then "Builtins.Main.Boolean" else
                    Nothing
