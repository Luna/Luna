[{"kind":"Method","defined_in":"Standard.Base.Data.Time.Date_Time","name":{"content":"to_js_object"},"arguments":[{"name":"self","reprType":"Standard.Base.Data.Time.Date_Time.Date_Time","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Data.Json.JS_Object","reexported_in":"Standard.Base.Data.Time","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":"Convert to a JavaScript Object representing a Date_Time."}},{"Marked":{"mark":"Example","header":"Example","body":"<p>Convert the current time to a JS_Object.<div class=\"example\">\nexample_to_json = Date_Time.now.to_js_object</div>"}}],"self_type":"Standard.Base.Data.Time.Date_Time.Date_Time","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Base.Data.Vector","name":{"content":"length"},"arguments":[{"name":"self","reprType":"Standard.Base.Data.Vector.Builder","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Data.Numbers.Integer","reexported_in":"Standard.Base.Data","documentation":[{"Paragraph":{"body":"Gets the current length of the builder."}}],"self_type":"Standard.Base.Data.Vector.Builder","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Database.Internal.Result_Set","name":{"content":"result_set_to_table"},"arguments":[{"name":"result_set","reprType":"Standard.Database.Internal.Result_Set.ResultSet","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"make_column_fetcher","reprType":"Standard.Database.Data.SQL_Type.SQL_Type -> Standard.Database.Internal.Column_Fetcher.Column_Fetcher","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"type_overrides","reprType":"(Standard.Base.Data.Vector.Vector Standard.Database.Data.SQL_Type.SQL_Type | Standard.Base.Nothing.Nothing) | Standard.Base.Nothing.Nothing","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Base.Nothing.Nothing"]},{"name":"last_row_only","reprType":"Standard.Base.Data.Boolean.Boolean","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Base.Data.Boolean.Boolean.True","Standard.Base.Data.Boolean.Boolean.False"]}],"return_type":"Standard.Table.Data.Table.Table","reexported_in":"Standard.Database.Internal","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":"Converts a ResultSet into a Materialized_Table."}}],"self_type":"Standard.Database.Internal.Result_Set","is_static":true,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Base.Random","name":{"content":"new"},"arguments":[{"name":"seed","reprType":"Standard.Base.Data.Numbers.Integer","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Random.Random_Number_Generator","reexported_in":"Standard.Base","documentation":[{"Paragraph":{"body":"Constructs a new random number generator."}}],"self_type":"Standard.Base.Random","is_static":true,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Constructor","defined_in":"Standard.Base.Metadata","name":{"content":"Numeric_Input"},"arguments":[{"name":"label","reprType":"Standard.Base.Nothing.Nothing | Standard.Base.Data.Text.Text","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Base.Nothing.Nothing"]},{"name":"display","reprType":"Standard.Base.Metadata.Display","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Base.Metadata.Display.Always","Standard.Base.Metadata.Display.When_Modified","Standard.Base.Metadata.Display.Expanded_Only"]},{"name":"minimum","reprType":"Standard.Base.Data.Numbers.Integer | Standard.Base.Nothing.Nothing","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Base.Nothing.Nothing"]},{"name":"maximum","reprType":"Standard.Base.Data.Numbers.Integer | Standard.Base.Nothing.Nothing","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Base.Nothing.Nothing"]},{"name":"step","reprType":"Standard.Base.Data.Numbers.Number","isSuspended":false,"hasDefault":true,"defaultValue":"1","tagValues":[]},{"name":"decimal_places","reprType":"Standard.Base.Data.Numbers.Integer","isSuspended":false,"hasDefault":true,"defaultValue":"0","tagValues":[]},{"name":"allow_outside","reprType":"Standard.Base.Data.Boolean.Boolean","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Base.Data.Boolean.Boolean.True","Standard.Base.Data.Boolean.Boolean.False"]}],"return_type":"Standard.Base.Metadata.Widget","reexported_in":null,"documentation":[{"Paragraph":{"body":"Describe a numeric parameter."}}],"self_type":"Standard.Base.Metadata.Widget","is_static":true,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Database.Internal.Table_Naming_Helper","name":{"content":"naming_properties"},"arguments":[{"name":"self","reprType":"Standard.Database.Internal.Table_Naming_Helper.Table_Naming_Helper","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Table.Internal.Naming_Properties.Naming_Properties","reexported_in":"Standard.Database.Internal","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":""}}],"self_type":"Standard.Database.Internal.Table_Naming_Helper.Table_Naming_Helper","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Table.Data.Column","name":{"content":"slice_ranges"},"arguments":[{"name":"column","reprType":"Standard.Base.Any.Any","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"ranges","reprType":"Standard.Base.Any.Any","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Any.Any","reexported_in":"Standard.Table.Data","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":"A helper to create a new table consisting of slices of the original table."}}],"self_type":"Standard.Table.Data.Column","is_static":true,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.AWS.AWS_Credential","name":{"content":"default_widget"},"arguments":[],"return_type":"Standard.Base.Metadata.Widget","reexported_in":null,"documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":""}}],"self_type":"Standard.AWS.AWS_Credential.AWS_Credential","is_static":true,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Visualization.Table","name":{"content":"row_heights"},"arguments":[{"name":"self","reprType":"Standard.Visualization.Table.Table_Specification_Update","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Data.Vector.Vector Standard.Base.Data.Numbers.Number","reexported_in":null,"documentation":[{"Paragraph":{"body":""}}],"self_type":"Standard.Base.Data.Vector.Vector Standard.Base.Data.Numbers.Number","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Table.Internal.Java_Exports","name":{"content":"make_date_time_builder"},"arguments":[{"name":"initial_size","reprType":"Standard.Base.Data.Numbers.Integer","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Table.Internal.Java_Exports.DateTimeBuilder","reexported_in":"Standard.Table.Internal","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":""}}],"self_type":"Standard.Table.Internal.Java_Exports","is_static":true,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Constructor","defined_in":"Standard.Base.Data.Regression","name":{"content":"Logarithmic"},"arguments":[],"return_type":"Standard.Base.Data.Regression.Model","reexported_in":"Standard.Base","documentation":[{"Paragraph":{"body":"Fit a logarithmic line (y = A log x + B) to the data."}}],"self_type":"Standard.Base.Data.Regression.Model","is_static":true,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Base.Data.Filter_Condition","name":{"content":"case_sensitivity"},"arguments":[{"name":"self","reprType":"Standard.Base.Data.Filter_Condition.Filter_Condition","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Data.Text.Case_Sensitivity.Case_Sensitivity","reexported_in":"Standard.Base.Data","documentation":[{"Paragraph":{"body":""}}],"self_type":"Standard.Base.Data.Text.Case_Sensitivity.Case_Sensitivity","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Table.Data.Table","name":{"content":"column_naming_helper"},"arguments":[{"name":"self","reprType":"Standard.Table.Data.Table.Table","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Table.Internal.Column_Naming_Helper.Column_Naming_Helper","reexported_in":"Standard.Table.Data","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":""}}],"self_type":"Standard.Table.Data.Table.Table","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Table.Data.Data_Formatter","name":{"content":"parse"},"arguments":[{"name":"self","reprType":"Standard.Table.Data.Data_Formatter.Data_Formatter","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"text","reprType":"Standard.Base.Data.Text.Text","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"datatype","reprType":"Standard.Table.Data.Type.Value_Type.Auto | Standard.Base.Data.Numbers.Integer | Standard.Base.Data.Numbers.Number | Standard.Base.Data.Time.Date.Date | Standard.Base.Data.Time.Date_Time.Date_Time | Standard.Base.Data.Time.Time_Of_Day.Time_Of_Day | Standard.Base.Data.Boolean.Boolean","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Table.Data.Type.Value_Type.Auto","Standard.Base.Data.Boolean.Boolean.True","Standard.Base.Data.Boolean.Boolean.False"]},{"name":"on_problems","reprType":"Standard.Base.Errors.Problem_Behavior.Problem_Behavior","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Base.Errors.Problem_Behavior.Problem_Behavior.Ignore","Standard.Base.Errors.Problem_Behavior.Problem_Behavior.Report_Warning","Standard.Base.Errors.Problem_Behavior.Problem_Behavior.Report_Error"]}],"return_type":"Standard.Base.Any.Any","reexported_in":"Standard.Table.Data","documentation":[{"Tag":{"tag":"Private","body":""}},{"Tag":{"tag":"Advanced","body":""}},{"Paragraph":{"body":"Parse a Text into a value."}},{"Keyed":{"key":"Arguments","body":""}},{"Arguments":{"args":[{"name":"text","description":"Text value to parse."},{"name":"datatype","description":"The expected Enso type to parse the value into. If set to <code>Auto</code>, the type will be inferred automatically."},{"name":"on_problems","description":"Specifies the behavior when a problem occurs. By default, a warning is issued, but the operation proceeds. If set to <code>Report_Error</code>, the operation fails with a dataflow error. If set to <code>Ignore</code>, the operation proceeds without errors or warnings."}]}}],"self_type":"Standard.Table.Data.Data_Formatter.Data_Formatter","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Database.Internal.Helpers","name":{"content":"check_integrity"},"arguments":[{"name":"entity1","reprType":"Standard.Database.Data.Table.Table | Standard.Database.Data.Column.Column","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"entity2","reprType":"Standard.Database.Data.Table.Table | Standard.Database.Data.Column.Column","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Data.Boolean.Boolean","reexported_in":"Standard.Database.Internal","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":"Checks if the two tables or columns have the same context and use the same connection."}},{"Keyed":{"key":"Arguments","body":""}},{"Arguments":{"args":[{"name":"entity1","description":"The entity to check against the second."},{"name":"entity2","description":"The entity to check against the first."}]}}],"self_type":"Standard.Database.Internal.Helpers","is_static":true,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Base.Data.List","name":{"content":"to_vector"},"arguments":[{"name":"self","reprType":"Standard.Base.Data.List.List","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Data.Vector.Vector","reexported_in":"Standard.Base.Data","documentation":[{"Paragraph":{"body":"Convert this list to a vector with the same elements."}}],"self_type":"Standard.Base.Data.List.List","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Base.Data.Time.Date_Range","name":{"content":"nth_element_of_range"},"arguments":[{"name":"start","reprType":"Standard.Base.Any.Any","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"step","reprType":"Standard.Base.Any.Any","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"increasing","reprType":"Standard.Base.Any.Any","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"n","reprType":"Standard.Base.Any.Any","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Any.Any","reexported_in":"Standard.Base.Data.Time","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":""}}],"self_type":"Standard.Base.Data.Time.Date_Range","is_static":true,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Database.Data.Table","name":{"content":"get"},"arguments":[{"name":"self","reprType":"Standard.Database.Data.Table.Table","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"selector","reprType":"Standard.Base.Data.Text.Text | Standard.Base.Data.Numbers.Integer","isSuspended":false,"hasDefault":true,"defaultValue":"0","tagValues":[]},{"name":"if_missing","reprType":"Standard.Base.Any.Any","isSuspended":true,"hasDefault":true,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Database.Data.Column.Column | Standard.Base.Any.Any","reexported_in":"Standard.Database.Data","documentation":[{"Paragraph":{"body":"Returns the column with the given name or index."}},{"Keyed":{"key":"Arguments","body":""}},{"Arguments":{"args":[{"name":"selector","description":"The name or index of the column being looked up."},{"name":"if_missing","description":"The value to use if the selector isn't present."}]}}],"self_type":"Standard.Database.Data.Table.Table","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Type","defined_in":"Standard.Table.Errors","name":{"content":"Parser_Error"},"arguments":[],"return_type":"Standard.Table.Errors.Parser_Error","reexported_in":null,"documentation":[{"Paragraph":{"body":"Indicates an unexpected parser error."}}],"self_type":null,"is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Database.Internal.Upload_Table","name":{"content":"check_already_existing_rows"},"arguments":[{"name":"self","reprType":"Standard.Database.Internal.Upload_Table.Append_Helper","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"continuation","reprType":"Standard.Base.Any.Any","isSuspended":true,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Any.Any","reexported_in":"Standard.Database.Internal","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":"Checks if any rows from the source table already exist in the target, and if they do - raises an error.<p>Does nothing if <code>key_columns</code> is empty, as then there is no notion of 'matching' rows."}}],"self_type":"Standard.Database.Internal.Upload_Table.Append_Helper","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Base.Data.Time.Date","name":{"content":"day_of_year"},"arguments":[{"name":"self","reprType":"Standard.Base.Data.Time.Date.Date","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Data.Numbers.Integer","reexported_in":"Standard.Base.Data.Time","documentation":[{"Paragraph":{"body":"Returns the day of the year."}}],"self_type":"Standard.Base.Data.Time.Date.Date","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Base.Data.Text.Extensions","name":{"content":"contains"},"arguments":[{"name":"self","reprType":"Standard.Base.Data.Text.Text","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]},{"name":"term","reprType":"Standard.Base.Data.Text.Text","isSuspended":false,"hasDefault":true,"defaultValue":"","tagValues":[]},{"name":"case_sensitivity","reprType":"Standard.Base.Data.Text.Case_Sensitivity.Case_Sensitivity","isSuspended":false,"hasDefault":true,"defaultValue":null,"tagValues":["Standard.Base.Data.Text.Case_Sensitivity.Case_Sensitivity.Default","Standard.Base.Data.Text.Case_Sensitivity.Case_Sensitivity.Sensitive","Standard.Base.Data.Text.Case_Sensitivity.Case_Sensitivity.Insensitive"]}],"return_type":"Standard.Base.Data.Boolean.Boolean","reexported_in":"Standard.Base.Data.Text","documentation":[{"Tag":{"tag":"Alias","body":"Contains"}},{"Paragraph":{"body":"Checks whether <code>self</code> contains <code>sequence</code> as its substring. Returns: <code>True</code> if term is found within <code>self</code>. <code>False</code> otherwise."}},{"Keyed":{"key":"Arguments","body":""}},{"Arguments":{"args":[{"name":"term","description":"The term to find."},{"name":"case_sensitivity","description":"Specifies if the text values should be compared case sensitively."}]}},{"Marked":{"mark":"Important","header":"Unicode Equality","body":"<p>The definition of equality includes Unicode canonicalization. I.e. two texts are equal if they are identical after canonical decomposition. This ensures that different ways of expressing the same character in the underlying binary representation are considered equal.<p>'ś' . contains 's' == False 's\\u{301}' . contains 's' == False 's\\u{301}' . contains 'ś' == True 'ś' . contains 's\\u{301}' == True"}},{"Marked":{"mark":"Example","header":"Example","body":"<p>See if the text \"Hello\" contains the text \"ell\".<div class=\"example\">\n\"Hello\".contains \"ell\"\n</div>"}},{"Marked":{"mark":"Example","header":"Example","body":"<p>See if the text \"Cześć\" contains the text 's\\u{301}' (which folds to 'ś').<div class=\"example\">\n\"Cześć\".contains 's\\u{301}'\n</div>"}},{"Marked":{"mark":"Example","header":"Example","body":"<p>See if the text \"Hello!\" contains the text 'LO', ignoring case.<div class=\"example\">\n\"Hello!\".contains \"LO\" Case_Sensitivity.Insensitive</div>"}}],"self_type":"Standard.Base.Data.Text.Text","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Table.Data.Table","name":{"content":"columns_helper"},"arguments":[{"name":"self","reprType":"Standard.Table.Data.Table.Table","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Table.Internal.Table_Helpers.Table_Column_Helper","reexported_in":"Standard.Table.Data","documentation":[{"Tag":{"tag":"Private","body":""}},{"Paragraph":{"body":""}}],"self_type":"Standard.Table.Data.Table.Table","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Base.Data.Array","name":{"content":"first"},"arguments":[{"name":"self","reprType":"Standard.Base.Data.Array.Array","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Any.Any","reexported_in":"Standard.Base.Data","documentation":[{"Paragraph":{"body":"Get the first element from the array, or an <code>Index_Out_Of_Bounds</code> if the array is empty."}},{"Marked":{"mark":"Example","header":"Example","body":"<p>The following code returns 1.<div class=\"example\">\n[1, 2, 3, 4].to_array.first</div>"}}],"self_type":"Standard.Base.Data.Array.Array","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null},{"kind":"Method","defined_in":"Standard.Base.System","name":{"content":"exit_code"},"arguments":[{"name":"self","reprType":"Standard.Base.System.System_Process_Result","isSuspended":false,"hasDefault":false,"defaultValue":null,"tagValues":[]}],"return_type":"Standard.Base.Any.Any","reexported_in":"Standard.Base","documentation":[{"Paragraph":{"body":""}}],"self_type":"Standard.Base.Any.Any","is_static":false,"scope":"Everywhere","icon_name":null,"group_name":null}]