# This file is not auto-generated. Feel free to edit it.

name: ‚ú® Pull Request

on:
  push:
    branches:
      - develop
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # Read-only access to repository contents
  issues: write # Write access to issues
  pull-requests: write # Write access to pull requests
  statuses: write # Write access to commit statuses
  checks: write

jobs:
  gui-changed-files:
    name: üîç GUI files changed
    uses: ./.github/workflows/gui-changed-files.yml
    secrets: inherit

  wasm-changed-files:
    runs-on: ubuntu-latest
    name: üîç WASM files changed
    outputs:
      all_changed_files: ${{ steps.wasm-changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.wasm-changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get changed files
        id: wasm-changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            .cargo/**
            app/rust-ffi/**
            build/**
            lib/rust/**
            tools/language-server/logstat/**
            tools/language-server/wstest/**
            Cargo.lock
            Cargo.toml
            rust-toolchain.toml
            rustfmt.toml
            .github/workflows/wasm-checks.yml
            .github/workflows/pull-request.yml
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.wasm-changed-files.outputs.all_changed_files }}
        run: |
          if [[ "${{ steps.wasm-changed-files.outputs.any_changed }}" == "true" ]]; then
            echo "Files changed:"
          fi
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file"
          done

  engine-changed-files:
    runs-on: ubuntu-latest
    name: üîç Engine files changed
    outputs:
      all_changed_files: ${{ steps.engine-changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.engine-changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Get changed files
        id: engine-changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            distribution/**
            engine/**
            lib/**
            project/**
            std-bits/**
            test/**
            build.sbt
            .cargo/**
            Cargo.lock
            Cargo.toml
            rust-toolchain.toml
            .github/workflows/engine-checks.yml
            .github/workflows/pull-request.yml
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.engine-changed-files.outputs.all_changed_files }}
        run: |
          if [[ "${{ steps.engine-changed-files.outputs.any_changed }}" == "true" ]]; then
            echo "Files changed:"
          fi
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file"
          done

  gui-checks:
    name: üß∞ GUI Checks
    uses: ./.github/workflows/gui-checks.yml
    needs: [gui-changed-files]
    if: needs.gui-changed-files.outputs.any_changed == 'true' || github.ref == 'refs/heads/develop'
    secrets: inherit

  storybook:
    name: üìö Deploy Storybook
    uses: ./.github/workflows/storybook.yml
    needs: [gui-changed-files]
    if: needs.gui-changed-files.outputs.any_changed == 'true' || github.ref == 'refs/heads/develop'
    secrets: inherit

  wasm-checks:
    name: ü¶Ä WASM Checks
    uses: ./.github/workflows/wasm-checks.yml
    needs: [wasm-changed-files]
    if: needs.wasm-changed-files.outputs.any_changed == 'true' || github.ref == 'refs/heads/develop'
    secrets: inherit

  engine-checks:
    name: ‚öôÔ∏è Engine Checks
    uses: ./.github/workflows/engine-checks.yml
    needs: [engine-changed-files]
    if: needs.engine-changed-files.outputs.any_changed == 'true' || github.ref == 'refs/heads/develop'
    secrets: inherit

  engine-checks-optional:
    name: ‚öôÔ∏è Engine Checks (Optional)
    uses: ./.github/workflows/engine-checks-optional.yml
    needs: [engine-changed-files]
    if: needs.engine-changed-files.outputs.any_changed == 'true' || github.ref == 'refs/heads/develop'
    secrets: inherit

  gui-packaging:
    name: üóê GUI Packaging
    uses: ./.github/workflows/gui-packaging.yml
    needs: [gui-changed-files, engine-changed-files]
    if: needs.gui-changed-files.outputs.any_changed == 'true' || needs.engine-changed-files.outputs.any_changed == 'true' || github.ref == 'refs/heads/develop'
    secrets: inherit

  gui-packaging-optional:
    name: üóê GUI Packaging (Optional)
    uses: ./.github/workflows/gui-packaging-optional.yml
    needs: [gui-changed-files, engine-changed-files]
    if: needs.gui-changed-files.outputs.any_changed == 'true' || needs.engine-changed-files.outputs.any_changed == 'true' || github.ref == 'refs/heads/develop'
    secrets: inherit

  required-checks:
    name: Required Checks
    runs-on: ubuntu-latest
    needs: [gui-checks, storybook, wasm-checks, engine-checks, gui-packaging]
    if: always()
    steps:
      - name: Checks Summary
        run: |
          echo "GUI Checks: ${{ needs.gui-checks.result }}"
          echo "Storybook: ${{ needs.storybook.result }}"
          echo "WASM Checks: ${{ needs.wasm-checks.result }}"
          echo "Engine Checks: ${{ needs.engine-checks.result }}"
          echo "GUI Packaging: ${{ needs.gui-packaging.result }}"

          declare -a checks
          checks+=("${{ needs.gui-checks.result }}")
          checks+=("${{ needs.storybook.result }}")
          checks+=("${{ needs.wasm-checks.result }}")
          checks+=("${{ needs.engine-checks.result }}")
          checks+=("${{ needs.gui-packaging.result }}")

          for result in "${checks[@]}"; do
            if [[ "$result" == "failure" ]]; then
              exit 1
            fi
          done

          echo "Success!"
