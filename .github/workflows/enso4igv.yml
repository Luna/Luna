name: Enso Language Support for VSCode, IGV, NetBeans

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
    paths:
      - ".github/workflows/enso4igv.yml"
      - "tools/enso4igv/**/*"

jobs:
  build_linux_parser:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Install rustup
        run: |
          rustup target add x86_64-unknown-linux-musl

      - name: Build Enso Parser
        working-directory: .
        run: |
          RUSTFLAGS="-C target-feature=-crt-static" cargo build -p enso-parser-jni -Z unstable-options --target x86_64-unknown-linux-musl --out-dir lib/linux/amd64/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux_parser
          path: |
            lib/linux/amd64/libenso_parser.so

  build_mac_parser:
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v2

      - name: Build Enso Parser
        working-directory: .
        run: |
          RUSTFLAGS="-C target-feature=-crt-static" cargo build -p enso-parser-jni -Z unstable-options --out-dir lib/mac/amd64/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac_parser
          path: |
            lib/**

  build_windows_parser:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Build Enso Parser
        working-directory: .
        run: |
          RUSTFLAGS="-C target-feature=-crt-static" cargo build -p enso-parser-jni -Z unstable-options --out-dir lib/windows/amd64/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac_parser
          path: |
            lib/**

  build_java:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: ["11"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: ${{ matrix.java }}
          cache: maven

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: "21"
          distribution: "graalvm-community"

      - name: Publish to Maven Repository
        run: sbt publishM2

      - name: Find out pom & micro versions
        working-directory: tools/enso4igv
        run: |
          # Why do we subtract a number? Read versioning policy!
          # https://github.com/enso-org/enso/pull/7861#discussion_r1333133490
          echo "POM_VERSION=`mvn -q -DforceStdout help:evaluate -Dexpression=project.version | cut -f1 -d -`" >> "$GITHUB_ENV"
          echo "MICRO_VERSION=`expr $GITHUB_RUN_NUMBER - 2930`" >> "$GITHUB_ENV"

      - name: Update project version
        working-directory: tools/enso4igv
        run: |
          echo "Setting version to $POM_VERSION.$MICRO_VERSION"
          mvn versions:set -DnewVersion="$POM_VERSION.$MICRO_VERSION"

      - name: Download Libraries
        uses: actions/download-artifact@v2

      - name: List Binaries
        run: |
          ls -l
          find . | grep so$
          ls -l lib

      - name: Build with Maven
        run: mvn -B -Pvsix package --file tools/enso4igv/pom.xml
      - name: Archive NBM file
        uses: actions/upload-artifact@v4
        with:
          name: Enso IGV Plugin
          path: tools/enso4igv/target/*.nbm

      - name: Install Node.js modules
        run: mvn -B -Pvsix npm:install --file tools/enso4igv/pom.xml

      - name: Update package.json version
        run: mvn -B -Pvsix npm:exec@version --file tools/enso4igv/pom.xml

      - name: Build VSCode Extension
        run: mvn -B -Pvsix npm:run@vsix --file tools/enso4igv/pom.xml

      - name: Archive VSCode extension
        uses: actions/upload-artifact@v4
        with:
          name: VSCode Extension
          path: tools/enso4igv/*.vsix
