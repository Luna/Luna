---
name: Nightly Release
"on":
  push: {}
  schedule:
    - cron: 0 4 * * 2-6
  workflow_dispatch: {}
jobs:
  build-backend:
    name: Build Backend
    needs:
      - prepare-release
    runs-on:
      - "${{ matrix.os }}"
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - run: "./run backend upload"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: List files if failed
        run: ls -R
        if: failure()
    strategy:
      matrix:
        os:
          - - self-hosted
            - Windows
            - engine
          - - self-hosted
            - Linux
            - engine
          - - macos-latest
      fail-fast: false
    env:
      ENSO_RELEASE_ID: "${{needs.prepare-release.outputs.ENSO_RELEASE_ID}}"
      ENSO_VERSION: "${{needs.prepare-release.outputs.ENSO_VERSION}}"
  build-ide:
    name: Build IDE
    needs:
      - build-backend
      - build-wasm-linux
      - prepare-release
    runs-on:
      - "${{ matrix.os }}"
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - run: "./run ide upload --wasm-source current-ci-run --backend-source release --backend-release ${{env.ENSO_RELEASE_ID}}"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: List files if failed
        run: ls -R
        if: failure()
    strategy:
      matrix:
        os:
          - - self-hosted
            - Windows
            - engine
          - - self-hosted
            - Linux
            - engine
          - - macos-latest
      fail-fast: false
    env:
      ENSO_RELEASE_ID: "${{needs.prepare-release.outputs.ENSO_RELEASE_ID}}"
      ENSO_VERSION: "${{needs.prepare-release.outputs.ENSO_VERSION}}"
  build-wasm-linux:
    name: Build WASM (linux)
    needs:
      - prepare-release
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - run: "./run wasm build"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: List files if failed
        run: ls -R
        if: failure()
    env:
      ENSO_RELEASE_ID: "${{needs.prepare-release.outputs.ENSO_RELEASE_ID}}"
      ENSO_VERSION: "${{needs.prepare-release.outputs.ENSO_VERSION}}"
  prepare-release:
    name: Prepare release
    runs-on:
      - Linux
      - mwu-deluxe
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - id: prepare
        run: "./run release create-draft"
        if: "runner.os != 'Windows'"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        shell: bash
    outputs:
      ENSO_RELEASE_ID: "${{ steps.prepare.outputs.ENSO_RELEASE_ID }}"
      ENSO_VERSION: "${{ steps.prepare.outputs.ENSO_VERSION }}"
  publish-release-linux:
    name: Publish release (linux)
    needs:
      - build-backend
      - build-ide
      - build-wasm-linux
      - prepare-release
    runs-on:
      - self-hosted
      - Linux
      - engine
    steps:
      - name: Setup conda (GH runners only)
        uses: s-weigand/setup-conda@v1.0.5
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          update-conda: false
          conda-channels: "anaconda, conda-forge"
      - name: Installing wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        if: "startsWith(runner.name, 'GitHub Actions') || startsWith(runner.name, 'Hosted Agent')"
        with:
          version: v0.10.2
      - name: Setup the Artifact API environment
        uses: actions/github-script@v6
        with:
          script: "core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\ncore.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\ncore.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])"
      - name: Checking out the repository
        uses: actions/checkout@v3
        with:
          clean: false
      - run: "./run --help"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - run: "./run release publish"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: List files if failed
        run: ls -R
        if: failure()
    env:
      AWS_ACCESS_KEY_ID: "${{ secrets.ARTEFACT_S3_ACCESS_KEY_ID }}"
      AWS_REGION: us-west-1
      AWS_SECRET_ACCESS_KEY: "${{ secrets.ARTEFACT_S3_SECRET_ACCESS_KEY  }}"
      ENSO_RELEASE_ID: "${{needs.prepare-release.outputs.ENSO_RELEASE_ID}}"
      ENSO_VERSION: "${{needs.prepare-release.outputs.ENSO_VERSION}}"
env:
  ENSO_BUILD_KIND: nightly
  ENSO_BUILD_REPO_REMOTE: enso-org/enso-staging
  RUST_BACKTRACE: full
concurrency: release
